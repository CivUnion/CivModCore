package vg.civcraft.mc.civmodcore.legacy.materials;

import java.util.Arrays;
import joptsimple.internal.Strings;
import org.bukkit.Material;
import vg.civcraft.mc.civmodcore.util.TextUtil;

/**
 * This class is intended to aid with graceful migration from 1.13.2 to newer versions.
 */
public enum Material_1_13_2 implements IMaterial {

    ACACIA_BOAT(27326),
    ACACIA_BUTTON(13993),
    ACACIA_DOOR(23797),
    ACACIA_FENCE(4569),
    ACACIA_FENCE_GATE(14145),
    ACACIA_LEAVES(16606),
    ACACIA_LOG(8385),
    ACACIA_PLANKS(31312),
    ACACIA_PRESSURE_PLATE(17586),
    ACACIA_SAPLING(20806),
    ACACIA_SLAB(23730),
    ACACIA_STAIRS(17453),
    ACACIA_TRAPDOOR(18343),
    ACACIA_WOOD(9541),
    ACTIVATOR_RAIL(5834),
    AIR(9648),
    ALLIUM(6871),
    ANDESITE(25975),
    ANVIL(18718),
    APPLE(7720),
    ARMOR_STAND(12852),
    ARROW(31091),
    ATTACHED_MELON_STEM(30882),
    ATTACHED_PUMPKIN_STEM(12724),
    AZURE_BLUET(17608),
    BAKED_POTATO(14624),
    BARRIER(26453),
    BAT_SPAWN_EGG(14607),
    BEACON(6608),
    BEDROCK(23130),
    BEEF(4803),
    BEETROOT(23305),
    BEETROOTS(22075),
    BEETROOT_SEEDS(21282),
    BEETROOT_SOUP(16036),
    BIRCH_BOAT(28104),
    BIRCH_BUTTON(26934),
    BIRCH_DOOR(14759),
    BIRCH_FENCE(17347),
    BIRCH_FENCE_GATE(6322),
    BIRCH_LEAVES(12601),
    BIRCH_LOG(26727),
    BIRCH_PLANKS(29322),
    BIRCH_PRESSURE_PLATE(9664),
    BIRCH_SAPLING(31533),
    BIRCH_SLAB(13807),
    BIRCH_STAIRS(7657),
    BIRCH_TRAPDOOR(32585),
    BIRCH_WOOD(20913),
    BLACK_BANNER(9365),
    BLACK_BED(20490),
    BLACK_CARPET(6056),
    BLACK_CONCRETE(13338),
    BLACK_CONCRETE_POWDER(16150),
    BLACK_GLAZED_TERRACOTTA(29678),
    BLACK_SHULKER_BOX(24076),
    BLACK_STAINED_GLASS(13941),
    BLACK_STAINED_GLASS_PANE(13201),
    BLACK_TERRACOTTA(26691),
    BLACK_WALL_BANNER(4919),
    BLACK_WOOL(16693),
    BLAZE_POWDER(18941),
    BLAZE_ROD(8289),
    BLAZE_SPAWN_EGG(4759),
    BLUE_BANNER(18481),
    BLUE_BED(12714),
    BLUE_CARPET(13292),
    BLUE_CONCRETE(18756),
    BLUE_CONCRETE_POWDER(17773),
    BLUE_GLAZED_TERRACOTTA(23823),
    BLUE_ICE(22449),
    BLUE_ORCHID(13432),
    BLUE_SHULKER_BOX(11476),
    BLUE_STAINED_GLASS(7107),
    BLUE_STAINED_GLASS_PANE(28484),
    BLUE_TERRACOTTA(5236),
    BLUE_WALL_BANNER(17757),
    BLUE_WOOL(15738),
    BONE(5686),
    BONE_BLOCK(17312),
    BONE_MEAL(32458),
    BOOK(23097),
    BOOKSHELF(10069),
    BOW(8745),
    BOWL(32661),
    BRAIN_CORAL(31316),
    BRAIN_CORAL_BLOCK(30618),
    BRAIN_CORAL_FAN(13849),
    BRAIN_CORAL_WALL_FAN(22685),
    BREAD(32049),
    BREWING_STAND(14539),
    BRICK(6820),
    BRICKS(14165),
    BRICK_SLAB(26333),
    BRICK_STAIRS(21534),
    BROWN_BANNER(11481),
    BROWN_BED(25624),
    BROWN_CARPET(23352),
    BROWN_CONCRETE(19006),
    BROWN_CONCRETE_POWDER(21485),
    BROWN_GLAZED_TERRACOTTA(5655),
    BROWN_MUSHROOM(9665),
    BROWN_MUSHROOM_BLOCK(6291),
    BROWN_SHULKER_BOX(24230),
    BROWN_STAINED_GLASS(20945),
    BROWN_STAINED_GLASS_PANE(17557),
    BROWN_TERRACOTTA(23664),
    BROWN_WALL_BANNER(14731),
    BROWN_WOOL(32638),
    BUBBLE_COLUMN(13758),
    BUBBLE_CORAL(12464),
    BUBBLE_CORAL_BLOCK(15437),
    BUBBLE_CORAL_FAN(10795),
    BUBBLE_CORAL_WALL_FAN(20382),
    BUCKET(15215),
    CACTUS(12191),
    CACTUS_GREEN(17296),
    CAKE(27048),
    CARROT(22824),
    CARROTS(17258),
    CARROT_ON_A_STICK(27809),
    CARVED_PUMPKIN(25833),
    CAULDRON(26531),
    CAVE_AIR(17422),
    CAVE_SPIDER_SPAWN_EGG(23341),
    CHAINMAIL_BOOTS(17953),
    CHAINMAIL_CHESTPLATE(23602),
    CHAINMAIL_HELMET(26114),
    CHAINMAIL_LEGGINGS(19087),
    CHAIN_COMMAND_BLOCK(26798),
    CHARCOAL(5390),
    CHEST(22969),
    CHEST_MINECART(4497),
    CHICKEN(17281),
    CHICKEN_SPAWN_EGG(5462),
    CHIPPED_ANVIL(10623),
    CHISELED_QUARTZ_BLOCK(30964),
    CHISELED_RED_SANDSTONE(15529),
    CHISELED_SANDSTONE(31763),
    CHISELED_STONE_BRICKS(9087),
    CHORUS_FLOWER(28542),
    CHORUS_FRUIT(7652),
    CHORUS_PLANT(28243),
    CLAY(27880),
    CLAY_BALL(24603),
    CLOCK(14980),
    COAL(29067),
    COAL_BLOCK(27968),
    COAL_ORE(30965),
    COARSE_DIRT(15411),
    COBBLESTONE(32147),
    COBBLESTONE_SLAB(6340),
    COBBLESTONE_STAIRS(24715),
    COBBLESTONE_WALL(12616),
    COBWEB(9469),
    COCOA(29709),
    COCOA_BEANS(27381),
    COD(24691),
    COD_BUCKET(28601),
    COD_SPAWN_EGG(27248),
    COMMAND_BLOCK(4355),
    COMMAND_BLOCK_MINECART(7992),
    COMPARATOR(18911),
    COMPASS(24139),
    CONDUIT(5148),
    COOKED_BEEF(21595),
    COOKED_CHICKEN(20780),
    COOKED_COD(9681),
    COOKED_MUTTON(31447),
    COOKED_PORKCHOP(27231),
    COOKED_RABBIT(4454),
    COOKED_SALMON(5615),
    COOKIE(27431),
    COW_SPAWN_EGG(14761),
    CRACKED_STONE_BRICKS(27869),
    CRAFTING_TABLE(20706),
    CREEPER_HEAD(29146),
    CREEPER_SPAWN_EGG(9653),
    CREEPER_WALL_HEAD(30123),
    CUT_RED_SANDSTONE(26842),
    CUT_SANDSTONE(6118),
    CYAN_BANNER(9839),
    CYAN_BED(16746),
    CYAN_CARPET(31495),
    CYAN_CONCRETE(26522),
    CYAN_CONCRETE_POWDER(15734),
    CYAN_DYE(8043),
    CYAN_GLAZED_TERRACOTTA(9550),
    CYAN_SHULKER_BOX(28123),
    CYAN_STAINED_GLASS(30604),
    CYAN_STAINED_GLASS_PANE(11784),
    CYAN_TERRACOTTA(25940),
    CYAN_WALL_BANNER(10889),
    CYAN_WOOL(12221),
    DAMAGED_ANVIL(10274),
    DANDELION(30558),
    DANDELION_YELLOW(21789),
    DARK_OAK_BOAT(28618),
    DARK_OAK_BUTTON(6214),
    DARK_OAK_DOOR(10669),
    DARK_OAK_FENCE(21767),
    DARK_OAK_FENCE_GATE(10679),
    DARK_OAK_LEAVES(22254),
    DARK_OAK_LOG(14831),
    DARK_OAK_PLANKS(20869),
    DARK_OAK_PRESSURE_PLATE(31375),
    DARK_OAK_SAPLING(14933),
    DARK_OAK_SLAB(28852),
    DARK_OAK_STAIRS(22921),
    DARK_OAK_TRAPDOOR(10355),
    DARK_OAK_WOOD(16995),
    DARK_PRISMARINE(19940),
    DARK_PRISMARINE_SLAB(7577),
    DARK_PRISMARINE_STAIRS(26511),
    DAYLIGHT_DETECTOR(8864),
    DEAD_BRAIN_CORAL(9116),
    DEAD_BRAIN_CORAL_BLOCK(12979),
    DEAD_BRAIN_CORAL_FAN(26150),
    DEAD_BRAIN_CORAL_WALL_FAN(23718),
    DEAD_BUBBLE_CORAL(30583),
    DEAD_BUBBLE_CORAL_BLOCK(28220),
    DEAD_BUBBLE_CORAL_FAN(17322),
    DEAD_BUBBLE_CORAL_WALL_FAN(18453),
    DEAD_BUSH(22888),
    DEAD_FIRE_CORAL(8365),
    DEAD_FIRE_CORAL_BLOCK(5307),
    DEAD_FIRE_CORAL_FAN(27073),
    DEAD_FIRE_CORAL_WALL_FAN(23375),
    DEAD_HORN_CORAL(5755),
    DEAD_HORN_CORAL_BLOCK(15103),
    DEAD_HORN_CORAL_FAN(11387),
    DEAD_HORN_CORAL_WALL_FAN(27550),
    DEAD_TUBE_CORAL(18028),
    DEAD_TUBE_CORAL_BLOCK(28350),
    DEAD_TUBE_CORAL_FAN(17628),
    DEAD_TUBE_CORAL_WALL_FAN(5128),
    DEBUG_STICK(24562),
    DETECTOR_RAIL(13475),
    DIAMOND(20865),
    DIAMOND_AXE(27277),
    DIAMOND_BLOCK(5944),
    DIAMOND_BOOTS(16522),
    DIAMOND_CHESTPLATE(32099),
    DIAMOND_HELMET(10755),
    DIAMOND_HOE(24050),
    DIAMOND_HORSE_ARMOR(10321),
    DIAMOND_LEGGINGS(11202),
    DIAMOND_ORE(9292),
    DIAMOND_PICKAXE(24291),
    DIAMOND_SHOVEL(25415),
    DIAMOND_SWORD(27707),
    DIORITE(24688),
    DIRT(10580),
    DISPENSER(20871),
    DOLPHIN_SPAWN_EGG(20787),
    DONKEY_SPAWN_EGG(14513),
    DRAGON_BREATH(20154),
    DRAGON_EGG(29946),
    DRAGON_HEAD(20084),
    DRAGON_WALL_HEAD(19818),
    DRIED_KELP(21042),
    DRIED_KELP_BLOCK(12966),
    DROPPER(31273),
    DROWNED_SPAWN_EGG(19368),
    EGG(21603),
    ELDER_GUARDIAN_SPAWN_EGG(11418),
    ELYTRA(23829),
    EMERALD(5654),
    EMERALD_BLOCK(9914),
    EMERALD_ORE(16630),
    ENCHANTED_BOOK(11741),
    ENCHANTED_GOLDEN_APPLE(8280),
    ENCHANTING_TABLE(16255),
    ENDERMAN_SPAWN_EGG(29488),
    ENDERMITE_SPAWN_EGG(16617),
    ENDER_CHEST(32349),
    ENDER_EYE(24860),
    ENDER_PEARL(5259),
    END_CRYSTAL(19090),
    END_GATEWAY(26605),
    END_PORTAL(16782),
    END_PORTAL_FRAME(15480),
    END_ROD(24832),
    END_STONE(29686),
    END_STONE_BRICKS(20314),
    EVOKER_SPAWN_EGG(21271),
    EXPERIENCE_BOTTLE(12858),
    FARMLAND(31166),
    FEATHER(30548),
    FERMENTED_SPIDER_EYE(19386),
    FERN(15794),
    FILLED_MAP(23504),
    FIRE(16396),
    FIREWORK_ROCKET(23841),
    FIREWORK_STAR(12190),
    FIRE_CHARGE(4842),
    FIRE_CORAL(29151),
    FIRE_CORAL_BLOCK(12119),
    FIRE_CORAL_FAN(11112),
    FIRE_CORAL_WALL_FAN(20100),
    FISHING_ROD(4167),
    FLINT(23596),
    FLINT_AND_STEEL(28620),
    FLOWER_POT(30567),
    FROSTED_ICE(21814),
    FURNACE(8133),
    FURNACE_MINECART(14196),
    GHAST_SPAWN_EGG(9970),
    GHAST_TEAR(18222),
    GLASS(6195),
    GLASS_BOTTLE(6116),
    GLASS_PANE(5709),
    GLISTERING_MELON_SLICE(20158),
    GLOWSTONE(32713),
    GLOWSTONE_DUST(6665),
    GOLDEN_APPLE(27732),
    GOLDEN_AXE(4878),
    GOLDEN_BOOTS(7859),
    GOLDEN_CARROT(5300),
    GOLDEN_CHESTPLATE(4507),
    GOLDEN_HELMET(7945),
    GOLDEN_HOE(19337),
    GOLDEN_HORSE_ARMOR(7996),
    GOLDEN_LEGGINGS(21002),
    GOLDEN_PICKAXE(10901),
    GOLDEN_SHOVEL(15597),
    GOLDEN_SWORD(10505),
    GOLD_BLOCK(27392),
    GOLD_INGOT(28927),
    GOLD_NUGGET(28814),
    GOLD_ORE(32625),
    GRANITE(21091),
    GRASS(6155),
    GRASS_BLOCK(28346),
    GRASS_PATH(8604),
    GRAVEL(7804),
    GRAY_BANNER(12053),
    GRAY_BED(15745),
    GRAY_CARPET(26991),
    GRAY_CONCRETE(13959),
    GRAY_CONCRETE_POWDER(13031),
    GRAY_DYE(9184),
    GRAY_GLAZED_TERRACOTTA(6256),
    GRAY_SHULKER_BOX(12754),
    GRAY_STAINED_GLASS(29979),
    GRAY_STAINED_GLASS_PANE(25272),
    GRAY_TERRACOTTA(18004),
    GRAY_WALL_BANNER(24275),
    GRAY_WOOL(27209),
    GREEN_BANNER(10698),
    GREEN_BED(13797),
    GREEN_CARPET(7780),
    GREEN_CONCRETE(17949),
    GREEN_CONCRETE_POWDER(6904),
    GREEN_GLAZED_TERRACOTTA(6958),
    GREEN_SHULKER_BOX(9377),
    GREEN_STAINED_GLASS(22503),
    GREEN_STAINED_GLASS_PANE(4767),
    GREEN_TERRACOTTA(4105),
    GREEN_WALL_BANNER(15046),
    GREEN_WOOL(25085),
    GUARDIAN_SPAWN_EGG(20113),
    GUNPOWDER(29974),
    HAY_BLOCK(17461),
    HEART_OF_THE_SEA(11807),
    HEAVY_WEIGHTED_PRESSURE_PLATE(16970),
    HOPPER(31974),
    HOPPER_MINECART(19024),
    HORN_CORAL(19511),
    HORN_CORAL_BLOCK(19958),
    HORN_CORAL_FAN(13610),
    HORN_CORAL_WALL_FAN(28883),
    HORSE_SPAWN_EGG(25981),
    HUSK_SPAWN_EGG(20178),
    ICE(30428),
    INFESTED_CHISELED_STONE_BRICKS(4728),
    INFESTED_COBBLESTONE(28798),
    INFESTED_CRACKED_STONE_BRICKS(7476),
    INFESTED_MOSSY_STONE_BRICKS(9850),
    INFESTED_STONE(18440),
    INFESTED_STONE_BRICKS(19749),
    INK_SAC(7184),
    IRON_AXE(15894),
    IRON_BARS(9378),
    IRON_BLOCK(24754),
    IRON_BOOTS(8531),
    IRON_CHESTPLATE(28112),
    IRON_DOOR(4788),
    IRON_HELMET(12025),
    IRON_HOE(11339),
    IRON_HORSE_ARMOR(30108),
    IRON_INGOT(24895),
    IRON_LEGGINGS(18951),
    IRON_NUGGET(13715),
    IRON_ORE(19834),
    IRON_PICKAXE(8842),
    IRON_SHOVEL(30045),
    IRON_SWORD(10904),
    IRON_TRAPDOOR(17095),
    ITEM_FRAME(27318),
    JACK_O_LANTERN(31612),
    JUKEBOX(19264),
    JUNGLE_BOAT(4495),
    JUNGLE_BUTTON(25317),
    JUNGLE_DOOR(28163),
    JUNGLE_FENCE(14358),
    JUNGLE_FENCE_GATE(21360),
    JUNGLE_LEAVES(5133),
    JUNGLE_LOG(20721),
    JUNGLE_PLANKS(26445),
    JUNGLE_PRESSURE_PLATE(11376),
    JUNGLE_SAPLING(17951),
    JUNGLE_SLAB(19117),
    JUNGLE_STAIRS(20636),
    JUNGLE_TRAPDOOR(8626),
    JUNGLE_WOOD(10341),
    KELP(21916),
    KELP_PLANT(29697),
    KNOWLEDGE_BOOK(12646),
    LADDER(23599),
    LAPIS_BLOCK(14485),
    LAPIS_LAZULI(11075),
    LAPIS_ORE(22934),
    LARGE_FERN(30177),
    LAVA(8415),
    LAVA_BUCKET(9228),
    LEAD(29539),
    LEATHER(16414),
    LEATHER_BOOTS(15282),
    LEATHER_CHESTPLATE(29275),
    LEATHER_HELMET(11624),
    LEATHER_LEGGINGS(28210),
    LEVER(15319),
    LIGHT_BLUE_BANNER(18060),
    LIGHT_BLUE_BED(20957),
    LIGHT_BLUE_CARPET(21194),
    LIGHT_BLUE_CONCRETE(29481),
    LIGHT_BLUE_CONCRETE_POWDER(31206),
    LIGHT_BLUE_DYE(28738),
    LIGHT_BLUE_GLAZED_TERRACOTTA(4336),
    LIGHT_BLUE_SHULKER_BOX(18226),
    LIGHT_BLUE_STAINED_GLASS(17162),
    LIGHT_BLUE_STAINED_GLASS_PANE(18721),
    LIGHT_BLUE_TERRACOTTA(31779),
    LIGHT_BLUE_WALL_BANNER(12011),
    LIGHT_BLUE_WOOL(21073),
    LIGHT_GRAY_BANNER(11417),
    LIGHT_GRAY_BED(5090),
    LIGHT_GRAY_CARPET(11317),
    LIGHT_GRAY_CONCRETE(14453),
    LIGHT_GRAY_CONCRETE_POWDER(21589),
    LIGHT_GRAY_DYE(27643),
    LIGHT_GRAY_GLAZED_TERRACOTTA(10707),
    LIGHT_GRAY_SHULKER_BOX(21345),
    LIGHT_GRAY_STAINED_GLASS(5843),
    LIGHT_GRAY_STAINED_GLASS_PANE(19008),
    LIGHT_GRAY_TERRACOTTA(26388),
    LIGHT_GRAY_WALL_BANNER(31088),
    LIGHT_GRAY_WOOL(22936),
    LIGHT_WEIGHTED_PRESSURE_PLATE(14875),
    LILAC(22837),
    LILY_PAD(19271),
    LIME_BANNER(18887),
    LIME_BED(27860),
    LIME_CARPET(15443),
    LIME_CONCRETE(5863),
    LIME_CONCRETE_POWDER(28859),
    LIME_DYE(6147),
    LIME_GLAZED_TERRACOTTA(13861),
    LIME_SHULKER_BOX(28360),
    LIME_STAINED_GLASS(24266),
    LIME_STAINED_GLASS_PANE(10610),
    LIME_TERRACOTTA(24013),
    LIME_WALL_BANNER(21422),
    LIME_WOOL(10443),
    LINGERING_POTION(25857),
    LLAMA_SPAWN_EGG(23640),
    MAGENTA_BANNER(15591),
    MAGENTA_BED(20061),
    MAGENTA_CARPET(6180),
    MAGENTA_CONCRETE(20591),
    MAGENTA_CONCRETE_POWDER(8272),
    MAGENTA_DYE(11788),
    MAGENTA_GLAZED_TERRACOTTA(8067),
    MAGENTA_SHULKER_BOX(21566),
    MAGENTA_STAINED_GLASS(26814),
    MAGENTA_STAINED_GLASS_PANE(14082),
    MAGENTA_TERRACOTTA(25900),
    MAGENTA_WALL_BANNER(23291),
    MAGENTA_WOOL(11853),
    MAGMA_BLOCK(25927),
    MAGMA_CREAM(25097),
    MAGMA_CUBE_SPAWN_EGG(26638),
    MAP(21655),
    MELON(25172),
    MELON_SEEDS(18340),
    MELON_SLICE(5347),
    MELON_STEM(8247),
    MILK_BUCKET(9680),
    MINECART(14352),
    MOOSHROOM_SPAWN_EGG(22125),
    MOSSY_COBBLESTONE(21900),
    MOSSY_COBBLESTONE_WALL(11536),
    MOSSY_STONE_BRICKS(16415),
    MOVING_PISTON(13831),
    MULE_SPAWN_EGG(11229),
    MUSHROOM_STEM(16543),
    MUSHROOM_STEW(16336),
    MUSIC_DISC_11(27426),
    MUSIC_DISC_13(16359),
    MUSIC_DISC_BLOCKS(26667),
    MUSIC_DISC_CAT(16246),
    MUSIC_DISC_CHIRP(19436),
    MUSIC_DISC_FAR(13823),
    MUSIC_DISC_MALL(11517),
    MUSIC_DISC_MELLOHI(26117),
    MUSIC_DISC_STAL(14989),
    MUSIC_DISC_STRAD(16785),
    MUSIC_DISC_WAIT(26499),
    MUSIC_DISC_WARD(24026),
    MUTTON(4792),
    MYCELIUM(9913),
    NAME_TAG(30731),
    NAUTILUS_SHELL(19989),
    NETHERRACK(23425),
    NETHER_BRICK(19996),
    NETHER_BRICKS(27802),
    NETHER_BRICK_FENCE(5286),
    NETHER_BRICK_SLAB(26586),
    NETHER_BRICK_STAIRS(12085),
    NETHER_PORTAL(19469),
    NETHER_QUARTZ_ORE(4807),
    NETHER_STAR(12469),
    NETHER_WART(29227),
    NETHER_WART_BLOCK(15486),
    NOTE_BLOCK(20979),
    OAK_BOAT(17570),
    OAK_BUTTON(13510),
    OAK_DOOR(20341),
    OAK_FENCE(6442),
    OAK_FENCE_GATE(16689),
    OAK_LEAVES(4385),
    OAK_LOG(26723),
    OAK_PLANKS(14905),
    OAK_PRESSURE_PLATE(20108),
    OAK_SAPLING(9636),
    OAK_SLAB(12002),
    OAK_STAIRS(5449),
    OAK_TRAPDOOR(16927),
    OAK_WOOD(7378),
    OBSERVER(10726),
    OBSIDIAN(32723),
    OCELOT_SPAWN_EGG(30080),
    ORANGE_BANNER(4839),
    ORANGE_BED(11194),
    ORANGE_CARPET(24752),
    ORANGE_CONCRETE(19914),
    ORANGE_CONCRETE_POWDER(30159),
    ORANGE_DYE(13866),
    ORANGE_GLAZED_TERRACOTTA(27451),
    ORANGE_SHULKER_BOX(21673),
    ORANGE_STAINED_GLASS(25142),
    ORANGE_STAINED_GLASS_PANE(21089),
    ORANGE_TERRACOTTA(18684),
    ORANGE_TULIP(26038),
    ORANGE_WALL_BANNER(9936),
    ORANGE_WOOL(23957),
    OXEYE_DAISY(11709),
    PACKED_ICE(28993),
    PAINTING(23945),
    PAPER(9923),
    PARROT_SPAWN_EGG(23614),
    PEONY(21155),
    PETRIFIED_OAK_SLAB(18658),
    PHANTOM_MEMBRANE(18398),
    PHANTOM_SPAWN_EGG(24648),
    PIG_SPAWN_EGG(22584),
    PINK_BANNER(19439),
    PINK_BED(13795),
    PINK_CARPET(30186),
    PINK_CONCRETE(5227),
    PINK_CONCRETE_POWDER(6421),
    PINK_DYE(31151),
    PINK_GLAZED_TERRACOTTA(10260),
    PINK_SHULKER_BOX(24968),
    PINK_STAINED_GLASS(16164),
    PINK_STAINED_GLASS_PANE(24637),
    PINK_TERRACOTTA(23727),
    PINK_TULIP(27319),
    PINK_WALL_BANNER(9421),
    PINK_WOOL(7611),
    PISTON(21130),
    PISTON_HEAD(30226),
    PLAYER_HEAD(21174),
    PLAYER_WALL_HEAD(13164),
    PODZOL(24068),
    POISONOUS_POTATO(32640),
    POLAR_BEAR_SPAWN_EGG(17015),
    POLISHED_ANDESITE(8335),
    POLISHED_DIORITE(31615),
    POLISHED_GRANITE(5477),
    POPPED_CHORUS_FRUIT(27844),
    POPPY(12851),
    PORKCHOP(30896),
    POTATO(21088),
    POTATOES(10879),
    POTION(24020),
    POTTED_ACACIA_SAPLING(14096),
    POTTED_ALLIUM(13184),
    POTTED_AZURE_BLUET(8754),
    POTTED_BIRCH_SAPLING(32484),
    POTTED_BLUE_ORCHID(6599),
    POTTED_BROWN_MUSHROOM(14481),
    POTTED_CACTUS(8777),
    POTTED_DANDELION(9727),
    POTTED_DARK_OAK_SAPLING(6486),
    POTTED_DEAD_BUSH(13020),
    POTTED_FERN(23315),
    POTTED_JUNGLE_SAPLING(7525),
    POTTED_OAK_SAPLING(11905),
    POTTED_ORANGE_TULIP(28807),
    POTTED_OXEYE_DAISY(19707),
    POTTED_PINK_TULIP(10089),
    POTTED_POPPY(7457),
    POTTED_RED_MUSHROOM(22881),
    POTTED_RED_TULIP(28594),
    POTTED_SPRUCE_SAPLING(29498),
    POTTED_WHITE_TULIP(24330),
    POWERED_RAIL(11064),
    PRISMARINE(7539),
    PRISMARINE_BRICKS(29118),
    PRISMARINE_BRICK_SLAB(26672),
    PRISMARINE_BRICK_STAIRS(15445),
    PRISMARINE_CRYSTALS(31546),
    PRISMARINE_SHARD(10993),
    PRISMARINE_SLAB(31323),
    PRISMARINE_STAIRS(19217),
    PUFFERFISH(8115),
    PUFFERFISH_BUCKET(8861),
    PUFFERFISH_SPAWN_EGG(24573),
    PUMPKIN(19170),
    PUMPKIN_PIE(28725),
    PUMPKIN_SEEDS(28985),
    PUMPKIN_STEM(19021),
    PURPLE_BANNER(29027),
    PURPLE_BED(29755),
    PURPLE_CARPET(5574),
    PURPLE_CONCRETE(20623),
    PURPLE_CONCRETE_POWDER(26808),
    PURPLE_DYE(6347),
    PURPLE_GLAZED_TERRACOTTA(4818),
    PURPLE_SHULKER_BOX(10373),
    PURPLE_STAINED_GLASS(21845),
    PURPLE_STAINED_GLASS_PANE(10948),
    PURPLE_TERRACOTTA(10387),
    PURPLE_WALL_BANNER(14298),
    PURPLE_WOOL(11922),
    PURPUR_BLOCK(7538),
    PURPUR_PILLAR(26718),
    PURPUR_SLAB(11487),
    PURPUR_STAIRS(8921),
    QUARTZ(23608),
    QUARTZ_BLOCK(11987),
    QUARTZ_PILLAR(16452),
    QUARTZ_SLAB(4423),
    QUARTZ_STAIRS(24079),
    RABBIT(23068),
    RABBIT_FOOT(13864),
    RABBIT_HIDE(12467),
    RABBIT_SPAWN_EGG(26496),
    RABBIT_STEW(10611),
    RAIL(13285),
    REDSTONE(11233),
    REDSTONE_BLOCK(19496),
    REDSTONE_LAMP(8217),
    REDSTONE_ORE(10887),
    REDSTONE_TORCH(22547),
    REDSTONE_WALL_TORCH(7595),
    REDSTONE_WIRE(25984),
    RED_BANNER(26961),
    RED_BED(30910),
    RED_CARPET(5424),
    RED_CONCRETE(8032),
    RED_CONCRETE_POWDER(13286),
    RED_GLAZED_TERRACOTTA(24989),
    RED_MUSHROOM(19728),
    RED_MUSHROOM_BLOCK(20766),
    RED_NETHER_BRICKS(18056),
    RED_SAND(16279),
    RED_SANDSTONE(9092),
    RED_SANDSTONE_SLAB(17550),
    RED_SANDSTONE_STAIRS(25466),
    RED_SHULKER_BOX(32448),
    RED_STAINED_GLASS(9717),
    RED_STAINED_GLASS_PANE(8630),
    RED_TERRACOTTA(5086),
    RED_TULIP(16781),
    RED_WALL_BANNER(4378),
    RED_WOOL(11621),
    REPEATER(28823),
    REPEATING_COMMAND_BLOCK(12405),
    ROSE_BUSH(6080),
    ROSE_RED(15694),
    ROTTEN_FLESH(21591),
    SADDLE(30206),
    SALMON(18516),
    SALMON_BUCKET(31427),
    SALMON_SPAWN_EGG(18739),
    SAND(11542),
    SANDSTONE(13141),
    SANDSTONE_SLAB(29830),
    SANDSTONE_STAIRS(18474),
    SCUTE(11914),
    SEAGRASS(23942),
    SEA_LANTERN(16984),
    SEA_PICKLE(19562),
    SHEARS(27971),
    SHEEP_SPAWN_EGG(24488),
    SHIELD(29943),
    SHULKER_BOX(7776),
    SHULKER_SHELL(27848),
    SHULKER_SPAWN_EGG(31848),
    SIGN(16918),
    SILVERFISH_SPAWN_EGG(14537),
    SKELETON_HORSE_SPAWN_EGG(21356),
    SKELETON_SKULL(13270),
    SKELETON_SPAWN_EGG(15261),
    SKELETON_WALL_SKULL(31650),
    SLIME_BALL(5242),
    SLIME_BLOCK(31892),
    SLIME_SPAWN_EGG(6550),
    SMOOTH_QUARTZ(14415),
    SMOOTH_RED_SANDSTONE(25180),
    SMOOTH_SANDSTONE(30039),
    SMOOTH_STONE(21910),
    SNOW(14146),
    SNOWBALL(19487),
    SNOW_BLOCK(19913),
    SOUL_SAND(16841),
    SPAWNER(7018),
    SPECTRAL_ARROW(4568),
    SPIDER_EYE(9318),
    SPIDER_SPAWN_EGG(14984),
    SPLASH_POTION(30248),
    SPONGE(15860),
    SPRUCE_BOAT(9606),
    SPRUCE_BUTTON(23281),
    SPRUCE_DOOR(10642),
    SPRUCE_FENCE(25416),
    SPRUCE_FENCE_GATE(26423),
    SPRUCE_LEAVES(20039),
    SPRUCE_LOG(9726),
    SPRUCE_PLANKS(14593),
    SPRUCE_PRESSURE_PLATE(15932),
    SPRUCE_SAPLING(19874),
    SPRUCE_SLAB(4348),
    SPRUCE_STAIRS(11192),
    SPRUCE_TRAPDOOR(10289),
    SPRUCE_WOOD(32328),
    SQUID_SPAWN_EGG(10682),
    STICK(9773),
    STICKY_PISTON(18127),
    STONE(22948),
    STONE_AXE(6338),
    STONE_BRICKS(6962),
    STONE_BRICK_SLAB(19676),
    STONE_BRICK_STAIRS(27032),
    STONE_BUTTON(12279),
    STONE_HOE(22855),
    STONE_PICKAXE(14611),
    STONE_PRESSURE_PLATE(22591),
    STONE_SHOVEL(9520),
    STONE_SLAB(19838),
    STONE_SWORD(25084),
    STRAY_SPAWN_EGG(30153),
    STRING(12806),
    STRIPPED_ACACIA_LOG(18167),
    STRIPPED_ACACIA_WOOD(27193),
    STRIPPED_BIRCH_LOG(8838),
    STRIPPED_BIRCH_WOOD(22350),
    STRIPPED_DARK_OAK_LOG(6492),
    STRIPPED_DARK_OAK_WOOD(16000),
    STRIPPED_JUNGLE_LOG(15476),
    STRIPPED_JUNGLE_WOOD(30315),
    STRIPPED_OAK_LOG(20523),
    STRIPPED_OAK_WOOD(31455),
    STRIPPED_SPRUCE_LOG(6140),
    STRIPPED_SPRUCE_WOOD(6467),
    STRUCTURE_BLOCK(26831),
    STRUCTURE_VOID(30806),
    SUGAR(30638),
    SUGAR_CANE(7726),
    SUNFLOWER(7408),
    TALL_GRASS(21559),
    TALL_SEAGRASS(27189),
    TERRACOTTA(16544),
    TIPPED_ARROW(25164),
    TNT(7896),
    TNT_MINECART(4277),
    TORCH(6063),
    TOTEM_OF_UNDYING(10139),
    TRAPPED_CHEST(18970),
    TRIDENT(7534),
    TRIPWIRE(8810),
    TRIPWIRE_HOOK(8130),
    TROPICAL_FISH(24879),
    TROPICAL_FISH_BUCKET(29995),
    TROPICAL_FISH_SPAWN_EGG(19713),
    TUBE_CORAL(23048),
    TUBE_CORAL_BLOCK(23723),
    TUBE_CORAL_FAN(19929),
    TUBE_CORAL_WALL_FAN(25282),
    TURTLE_EGG(32101),
    TURTLE_HELMET(30120),
    TURTLE_SPAWN_EGG(17324),
    VEX_SPAWN_EGG(27751),
    VILLAGER_SPAWN_EGG(30348),
    VINDICATOR_SPAWN_EGG(25324),
    VINE(14564),
    VOID_AIR(13668),
    WALL_SIGN(10644),
    WALL_TORCH(25890),
    WATER(24998),
    WATER_BUCKET(8802),
    WET_SPONGE(9043),
    WHEAT(27709),
    WHEAT_SEEDS(28742),
    WHITE_BANNER(17562),
    WHITE_BED(8185),
    WHITE_CARPET(15117),
    WHITE_CONCRETE(6281),
    WHITE_CONCRETE_POWDER(10363),
    WHITE_GLAZED_TERRACOTTA(11326),
    WHITE_SHULKER_BOX(31750),
    WHITE_STAINED_GLASS(31190),
    WHITE_STAINED_GLASS_PANE(10557),
    WHITE_TERRACOTTA(20975),
    WHITE_TULIP(9742),
    WHITE_WALL_BANNER(15967),
    WHITE_WOOL(8624),
    WITCH_SPAWN_EGG(11837),
    WITHER_SKELETON_SKULL(31487),
    WITHER_SKELETON_SPAWN_EGG(10073),
    WITHER_SKELETON_WALL_SKULL(9326),
    WOLF_SPAWN_EGG(21692),
    WOODEN_AXE(6292),
    WOODEN_HOE(16043),
    WOODEN_PICKAXE(12792),
    WOODEN_SHOVEL(28432),
    WOODEN_SWORD(7175),
    WRITABLE_BOOK(13393),
    WRITTEN_BOOK(24164),
    YELLOW_BANNER(30382),
    YELLOW_BED(30410),
    YELLOW_CARPET(18149),
    YELLOW_CONCRETE(15722),
    YELLOW_CONCRETE_POWDER(10655),
    YELLOW_GLAZED_TERRACOTTA(10914),
    YELLOW_SHULKER_BOX(28700),
    YELLOW_STAINED_GLASS(12182),
    YELLOW_STAINED_GLASS_PANE(20298),
    YELLOW_TERRACOTTA(32129),
    YELLOW_WALL_BANNER(32004),
    YELLOW_WOOL(29507),
    ZOMBIE_HEAD(9304),
    ZOMBIE_HORSE_SPAWN_EGG(4275),
    ZOMBIE_PIGMAN_SPAWN_EGG(11531),
    ZOMBIE_SPAWN_EGG(5814),
    ZOMBIE_VILLAGER_SPAWN_EGG(10311),
    ZOMBIE_WALL_HEAD(16296),
    LEGACY_AIR(0, true),
    LEGACY_STONE(1, true),
    LEGACY_GRASS(2, true),
    LEGACY_DIRT(3, true),
    LEGACY_COBBLESTONE(4, true),
    LEGACY_WOOD(5, true),
    LEGACY_SAPLING(6, true),
    LEGACY_BEDROCK(7, true),
    LEGACY_WATER(8, true),
    LEGACY_STATIONARY_WATER(9, true),
    LEGACY_LAVA(10, true),
    LEGACY_STATIONARY_LAVA(11, true),
    LEGACY_SAND(12, true),
    LEGACY_GRAVEL(13, true),
    LEGACY_GOLD_ORE(14, true),
    LEGACY_IRON_ORE(15, true),
    LEGACY_COAL_ORE(16, true),
    LEGACY_LOG(17, true),
    LEGACY_LEAVES(18, true),
    LEGACY_SPONGE(19, true),
    LEGACY_GLASS(20, true),
    LEGACY_LAPIS_ORE(21, true),
    LEGACY_LAPIS_BLOCK(22, true),
    LEGACY_DISPENSER(23, true),
    LEGACY_SANDSTONE(24, true),
    LEGACY_NOTE_BLOCK(25, true),
    LEGACY_BED_BLOCK(26, true),
    LEGACY_POWERED_RAIL(27, true),
    LEGACY_DETECTOR_RAIL(28, true),
    LEGACY_PISTON_STICKY_BASE(29, true),
    LEGACY_WEB(30, true),
    LEGACY_LONG_GRASS(31, true),
    LEGACY_DEAD_BUSH(32, true),
    LEGACY_PISTON_BASE(33, true),
    LEGACY_PISTON_EXTENSION(34, true),
    LEGACY_WOOL(35, true),
    LEGACY_PISTON_MOVING_PIECE(36, true),
    LEGACY_YELLOW_FLOWER(37, true),
    LEGACY_RED_ROSE(38, true),
    LEGACY_BROWN_MUSHROOM(39, true),
    LEGACY_RED_MUSHROOM(40, true),
    LEGACY_GOLD_BLOCK(41, true),
    LEGACY_IRON_BLOCK(42, true),
    LEGACY_DOUBLE_STEP(43, true),
    LEGACY_STEP(44, true),
    LEGACY_BRICK(45, true),
    LEGACY_TNT(46, true),
    LEGACY_BOOKSHELF(47, true),
    LEGACY_MOSSY_COBBLESTONE(48, true),
    LEGACY_OBSIDIAN(49, true),
    LEGACY_TORCH(50, true),
    LEGACY_FIRE(51, true),
    LEGACY_MOB_SPAWNER(52, true),
    LEGACY_WOOD_STAIRS(53, true),
    LEGACY_CHEST(54, true),
    LEGACY_REDSTONE_WIRE(55, true),
    LEGACY_DIAMOND_ORE(56, true),
    LEGACY_DIAMOND_BLOCK(57, true),
    LEGACY_WORKBENCH(58, true),
    LEGACY_CROPS(59, true),
    LEGACY_SOIL(60, true),
    LEGACY_FURNACE(61, true),
    LEGACY_BURNING_FURNACE(62, true),
    LEGACY_SIGN_POST(63, true),
    LEGACY_WOODEN_DOOR(64, true),
    LEGACY_LADDER(65, true),
    LEGACY_RAILS(66, true),
    LEGACY_COBBLESTONE_STAIRS(67, true),
    LEGACY_WALL_SIGN(68, true),
    LEGACY_LEVER(69, true),
    LEGACY_STONE_PLATE(70, true),
    LEGACY_IRON_DOOR_BLOCK(71, true),
    LEGACY_WOOD_PLATE(72, true),
    LEGACY_REDSTONE_ORE(73, true),
    LEGACY_GLOWING_REDSTONE_ORE(74, true),
    LEGACY_REDSTONE_TORCH_OFF(75, true),
    LEGACY_REDSTONE_TORCH_ON(76, true),
    LEGACY_STONE_BUTTON(77, true),
    LEGACY_SNOW(78, true),
    LEGACY_ICE(79, true),
    LEGACY_SNOW_BLOCK(80, true),
    LEGACY_CACTUS(81, true),
    LEGACY_CLAY(82, true),
    LEGACY_SUGAR_CANE_BLOCK(83, true),
    LEGACY_JUKEBOX(84, true),
    LEGACY_FENCE(85, true),
    LEGACY_PUMPKIN(86, true),
    LEGACY_NETHERRACK(87, true),
    LEGACY_SOUL_SAND(88, true),
    LEGACY_GLOWSTONE(89, true),
    LEGACY_PORTAL(90, true),
    LEGACY_JACK_O_LANTERN(91, true),
    LEGACY_CAKE_BLOCK(92, true),
    LEGACY_DIODE_BLOCK_OFF(93, true),
    LEGACY_DIODE_BLOCK_ON(94, true),
    LEGACY_STAINED_GLASS(95, true),
    LEGACY_TRAP_DOOR(96, true),
    LEGACY_MONSTER_EGGS(97, true),
    LEGACY_SMOOTH_BRICK(98, true),
    LEGACY_HUGE_MUSHROOM_1(99, true),
    LEGACY_HUGE_MUSHROOM_2(100, true),
    LEGACY_IRON_FENCE(101, true),
    LEGACY_THIN_GLASS(102, true),
    LEGACY_MELON_BLOCK(103, true),
    LEGACY_PUMPKIN_STEM(104, true),
    LEGACY_MELON_STEM(105, true),
    LEGACY_VINE(106, true),
    LEGACY_FENCE_GATE(107, true),
    LEGACY_BRICK_STAIRS(108, true),
    LEGACY_SMOOTH_STAIRS(109, true),
    LEGACY_MYCEL(110, true),
    LEGACY_WATER_LILY(111, true),
    LEGACY_NETHER_BRICK(112, true),
    LEGACY_NETHER_FENCE(113, true),
    LEGACY_NETHER_BRICK_STAIRS(114, true),
    LEGACY_NETHER_WARTS(115, true),
    LEGACY_ENCHANTMENT_TABLE(116, true),
    LEGACY_BREWING_STAND(117, true),
    LEGACY_CAULDRON(118, true),
    LEGACY_ENDER_PORTAL(119, true),
    LEGACY_ENDER_PORTAL_FRAME(120, true),
    LEGACY_ENDER_STONE(121, true),
    LEGACY_DRAGON_EGG(122, true),
    LEGACY_REDSTONE_LAMP_OFF(123, true),
    LEGACY_REDSTONE_LAMP_ON(124, true),
    LEGACY_WOOD_DOUBLE_STEP(125, true),
    LEGACY_WOOD_STEP(126, true),
    LEGACY_COCOA(127, true),
    LEGACY_SANDSTONE_STAIRS(128, true),
    LEGACY_EMERALD_ORE(129, true),
    LEGACY_ENDER_CHEST(130, true),
    LEGACY_TRIPWIRE_HOOK(131, true),
    LEGACY_TRIPWIRE(132, true),
    LEGACY_EMERALD_BLOCK(133, true),
    LEGACY_SPRUCE_WOOD_STAIRS(134, true),
    LEGACY_BIRCH_WOOD_STAIRS(135, true),
    LEGACY_JUNGLE_WOOD_STAIRS(136, true),
    LEGACY_COMMAND(137, true),
    LEGACY_BEACON(138, true),
    LEGACY_COBBLE_WALL(139, true),
    LEGACY_FLOWER_POT(140, true),
    LEGACY_CARROT(141, true),
    LEGACY_POTATO(142, true),
    LEGACY_WOOD_BUTTON(143, true),
    LEGACY_SKULL(144, true),
    LEGACY_ANVIL(145, true),
    LEGACY_TRAPPED_CHEST(146, true),
    LEGACY_GOLD_PLATE(147, true),
    LEGACY_IRON_PLATE(148, true),
    LEGACY_REDSTONE_COMPARATOR_OFF(149, true),
    LEGACY_REDSTONE_COMPARATOR_ON(150, true),
    LEGACY_DAYLIGHT_DETECTOR(151, true),
    LEGACY_REDSTONE_BLOCK(152, true),
    LEGACY_QUARTZ_ORE(153, true),
    LEGACY_HOPPER(154, true),
    LEGACY_QUARTZ_BLOCK(155, true),
    LEGACY_QUARTZ_STAIRS(156, true),
    LEGACY_ACTIVATOR_RAIL(157, true),
    LEGACY_DROPPER(158, true),
    LEGACY_STAINED_CLAY(159, true),
    LEGACY_STAINED_GLASS_PANE(160, true),
    LEGACY_LEAVES_2(161, true),
    LEGACY_LOG_2(162, true),
    LEGACY_ACACIA_STAIRS(163, true),
    LEGACY_DARK_OAK_STAIRS(164, true),
    LEGACY_SLIME_BLOCK(165, true),
    LEGACY_BARRIER(166, true),
    LEGACY_IRON_TRAPDOOR(167, true),
    LEGACY_PRISMARINE(168, true),
    LEGACY_SEA_LANTERN(169, true),
    LEGACY_HAY_BLOCK(170, true),
    LEGACY_CARPET(171, true),
    LEGACY_HARD_CLAY(172, true),
    LEGACY_COAL_BLOCK(173, true),
    LEGACY_PACKED_ICE(174, true),
    LEGACY_DOUBLE_PLANT(175, true),
    LEGACY_STANDING_BANNER(176, true),
    LEGACY_WALL_BANNER(177, true),
    LEGACY_DAYLIGHT_DETECTOR_INVERTED(178, true),
    LEGACY_RED_SANDSTONE(179, true),
    LEGACY_RED_SANDSTONE_STAIRS(180, true),
    LEGACY_DOUBLE_STONE_SLAB2(181, true),
    LEGACY_STONE_SLAB2(182, true),
    LEGACY_SPRUCE_FENCE_GATE(183, true),
    LEGACY_BIRCH_FENCE_GATE(184, true),
    LEGACY_JUNGLE_FENCE_GATE(185, true),
    LEGACY_DARK_OAK_FENCE_GATE(186, true),
    LEGACY_ACACIA_FENCE_GATE(187, true),
    LEGACY_SPRUCE_FENCE(188, true),
    LEGACY_BIRCH_FENCE(189, true),
    LEGACY_JUNGLE_FENCE(190, true),
    LEGACY_DARK_OAK_FENCE(191, true),
    LEGACY_ACACIA_FENCE(192, true),
    LEGACY_SPRUCE_DOOR(193, true),
    LEGACY_BIRCH_DOOR(194, true),
    LEGACY_JUNGLE_DOOR(195, true),
    LEGACY_ACACIA_DOOR(196, true),
    LEGACY_DARK_OAK_DOOR(197, true),
    LEGACY_END_ROD(198, true),
    LEGACY_CHORUS_PLANT(199, true),
    LEGACY_CHORUS_FLOWER(200, true),
    LEGACY_PURPUR_BLOCK(201, true),
    LEGACY_PURPUR_PILLAR(202, true),
    LEGACY_PURPUR_STAIRS(203, true),
    LEGACY_PURPUR_DOUBLE_SLAB(204, true),
    LEGACY_PURPUR_SLAB(205, true),
    LEGACY_END_BRICKS(206, true),
    LEGACY_BEETROOT_BLOCK(207, true),
    LEGACY_GRASS_PATH(208, true),
    LEGACY_END_GATEWAY(209, true),
    LEGACY_COMMAND_REPEATING(210, true),
    LEGACY_COMMAND_CHAIN(211, true),
    LEGACY_FROSTED_ICE(212, true),
    LEGACY_MAGMA(213, true),
    LEGACY_NETHER_WART_BLOCK(214, true),
    LEGACY_RED_NETHER_BRICK(215, true),
    LEGACY_BONE_BLOCK(216, true),
    LEGACY_STRUCTURE_VOID(217, true),
    LEGACY_OBSERVER(218, true),
    LEGACY_WHITE_SHULKER_BOX(219, true),
    LEGACY_ORANGE_SHULKER_BOX(220, true),
    LEGACY_MAGENTA_SHULKER_BOX(221, true),
    LEGACY_LIGHT_BLUE_SHULKER_BOX(222, true),
    LEGACY_YELLOW_SHULKER_BOX(223, true),
    LEGACY_LIME_SHULKER_BOX(224, true),
    LEGACY_PINK_SHULKER_BOX(225, true),
    LEGACY_GRAY_SHULKER_BOX(226, true),
    LEGACY_SILVER_SHULKER_BOX(227, true),
    LEGACY_CYAN_SHULKER_BOX(228, true),
    LEGACY_PURPLE_SHULKER_BOX(229, true),
    LEGACY_BLUE_SHULKER_BOX(230, true),
    LEGACY_BROWN_SHULKER_BOX(231, true),
    LEGACY_GREEN_SHULKER_BOX(232, true),
    LEGACY_RED_SHULKER_BOX(233, true),
    LEGACY_BLACK_SHULKER_BOX(234, true),
    LEGACY_WHITE_GLAZED_TERRACOTTA(235, true),
    LEGACY_ORANGE_GLAZED_TERRACOTTA(236, true),
    LEGACY_MAGENTA_GLAZED_TERRACOTTA(237, true),
    LEGACY_LIGHT_BLUE_GLAZED_TERRACOTTA(238, true),
    LEGACY_YELLOW_GLAZED_TERRACOTTA(239, true),
    LEGACY_LIME_GLAZED_TERRACOTTA(240, true),
    LEGACY_PINK_GLAZED_TERRACOTTA(241, true),
    LEGACY_GRAY_GLAZED_TERRACOTTA(242, true),
    LEGACY_SILVER_GLAZED_TERRACOTTA(243, true),
    LEGACY_CYAN_GLAZED_TERRACOTTA(244, true),
    LEGACY_PURPLE_GLAZED_TERRACOTTA(245, true),
    LEGACY_BLUE_GLAZED_TERRACOTTA(246, true),
    LEGACY_BROWN_GLAZED_TERRACOTTA(247, true),
    LEGACY_GREEN_GLAZED_TERRACOTTA(248, true),
    LEGACY_RED_GLAZED_TERRACOTTA(249, true),
    LEGACY_BLACK_GLAZED_TERRACOTTA(250, true),
    LEGACY_CONCRETE(251, true),
    LEGACY_CONCRETE_POWDER(252, true),
    LEGACY_STRUCTURE_BLOCK(255, true),
    LEGACY_IRON_SPADE(256, true),
    LEGACY_IRON_PICKAXE(257, true),
    LEGACY_IRON_AXE(258, true),
    LEGACY_FLINT_AND_STEEL(259, true),
    LEGACY_APPLE(260, true),
    LEGACY_BOW(261, true),
    LEGACY_ARROW(262, true),
    LEGACY_COAL(263, true),
    LEGACY_DIAMOND(264, true),
    LEGACY_IRON_INGOT(265, true),
    LEGACY_GOLD_INGOT(266, true),
    LEGACY_IRON_SWORD(267, true),
    LEGACY_WOOD_SWORD(268, true),
    LEGACY_WOOD_SPADE(269, true),
    LEGACY_WOOD_PICKAXE(270, true),
    LEGACY_WOOD_AXE(271, true),
    LEGACY_STONE_SWORD(272, true),
    LEGACY_STONE_SPADE(273, true),
    LEGACY_STONE_PICKAXE(274, true),
    LEGACY_STONE_AXE(275, true),
    LEGACY_DIAMOND_SWORD(276, true),
    LEGACY_DIAMOND_SPADE(277, true),
    LEGACY_DIAMOND_PICKAXE(278, true),
    LEGACY_DIAMOND_AXE(279, true),
    LEGACY_STICK(280, true),
    LEGACY_BOWL(281, true),
    LEGACY_MUSHROOM_SOUP(282, true),
    LEGACY_GOLD_SWORD(283, true),
    LEGACY_GOLD_SPADE(284, true),
    LEGACY_GOLD_PICKAXE(285, true),
    LEGACY_GOLD_AXE(286, true),
    LEGACY_STRING(287, true),
    LEGACY_FEATHER(288, true),
    LEGACY_SULPHUR(289, true),
    LEGACY_WOOD_HOE(290, true),
    LEGACY_STONE_HOE(291, true),
    LEGACY_IRON_HOE(292, true),
    LEGACY_DIAMOND_HOE(293, true),
    LEGACY_GOLD_HOE(294, true),
    LEGACY_SEEDS(295, true),
    LEGACY_WHEAT(296, true),
    LEGACY_BREAD(297, true),
    LEGACY_LEATHER_HELMET(298, true),
    LEGACY_LEATHER_CHESTPLATE(299, true),
    LEGACY_LEATHER_LEGGINGS(300, true),
    LEGACY_LEATHER_BOOTS(301, true),
    LEGACY_CHAINMAIL_HELMET(302, true),
    LEGACY_CHAINMAIL_CHESTPLATE(303, true),
    LEGACY_CHAINMAIL_LEGGINGS(304, true),
    LEGACY_CHAINMAIL_BOOTS(305, true),
    LEGACY_IRON_HELMET(306, true),
    LEGACY_IRON_CHESTPLATE(307, true),
    LEGACY_IRON_LEGGINGS(308, true),
    LEGACY_IRON_BOOTS(309, true),
    LEGACY_DIAMOND_HELMET(310, true),
    LEGACY_DIAMOND_CHESTPLATE(311, true),
    LEGACY_DIAMOND_LEGGINGS(312, true),
    LEGACY_DIAMOND_BOOTS(313, true),
    LEGACY_GOLD_HELMET(314, true),
    LEGACY_GOLD_CHESTPLATE(315, true),
    LEGACY_GOLD_LEGGINGS(316, true),
    LEGACY_GOLD_BOOTS(317, true),
    LEGACY_FLINT(318, true),
    LEGACY_PORK(319, true),
    LEGACY_GRILLED_PORK(320, true),
    LEGACY_PAINTING(321, true),
    LEGACY_GOLDEN_APPLE(322, true),
    LEGACY_SIGN(323, true),
    LEGACY_WOOD_DOOR(324, true),
    LEGACY_BUCKET(325, true),
    LEGACY_WATER_BUCKET(326, true),
    LEGACY_LAVA_BUCKET(327, true),
    LEGACY_MINECART(328, true),
    LEGACY_SADDLE(329, true),
    LEGACY_IRON_DOOR(330, true),
    LEGACY_REDSTONE(331, true),
    LEGACY_SNOW_BALL(332, true),
    LEGACY_BOAT(333, true),
    LEGACY_LEATHER(334, true),
    LEGACY_MILK_BUCKET(335, true),
    LEGACY_CLAY_BRICK(336, true),
    LEGACY_CLAY_BALL(337, true),
    LEGACY_SUGAR_CANE(338, true),
    LEGACY_PAPER(339, true),
    LEGACY_BOOK(340, true),
    LEGACY_SLIME_BALL(341, true),
    LEGACY_STORAGE_MINECART(342, true),
    LEGACY_POWERED_MINECART(343, true),
    LEGACY_EGG(344, true),
    LEGACY_COMPASS(345, true),
    LEGACY_FISHING_ROD(346, true),
    LEGACY_WATCH(347, true),
    LEGACY_GLOWSTONE_DUST(348, true),
    LEGACY_RAW_FISH(349, true),
    LEGACY_COOKED_FISH(350, true),
    LEGACY_INK_SACK(351, true),
    LEGACY_BONE(352, true),
    LEGACY_SUGAR(353, true),
    LEGACY_CAKE(354, true),
    LEGACY_BED(355, true),
    LEGACY_DIODE(356, true),
    LEGACY_COOKIE(357, true),
    LEGACY_MAP(358, true),
    LEGACY_SHEARS(359, true),
    LEGACY_MELON(360, true),
    LEGACY_PUMPKIN_SEEDS(361, true),
    LEGACY_MELON_SEEDS(362, true),
    LEGACY_RAW_BEEF(363, true),
    LEGACY_COOKED_BEEF(364, true),
    LEGACY_RAW_CHICKEN(365, true),
    LEGACY_COOKED_CHICKEN(366, true),
    LEGACY_ROTTEN_FLESH(367, true),
    LEGACY_ENDER_PEARL(368, true),
    LEGACY_BLAZE_ROD(369, true),
    LEGACY_GHAST_TEAR(370, true),
    LEGACY_GOLD_NUGGET(371, true),
    LEGACY_NETHER_STALK(372, true),
    LEGACY_POTION(373, true),
    LEGACY_GLASS_BOTTLE(374, true),
    LEGACY_SPIDER_EYE(375, true),
    LEGACY_FERMENTED_SPIDER_EYE(376, true),
    LEGACY_BLAZE_POWDER(377, true),
    LEGACY_MAGMA_CREAM(378, true),
    LEGACY_BREWING_STAND_ITEM(379, true),
    LEGACY_CAULDRON_ITEM(380, true),
    LEGACY_EYE_OF_ENDER(381, true),
    LEGACY_SPECKLED_MELON(382, true),
    LEGACY_MONSTER_EGG(383, true),
    LEGACY_EXP_BOTTLE(384, true),
    LEGACY_FIREBALL(385, true),
    LEGACY_BOOK_AND_QUILL(386, true),
    LEGACY_WRITTEN_BOOK(387, true),
    LEGACY_EMERALD(388, true),
    LEGACY_ITEM_FRAME(389, true),
    LEGACY_FLOWER_POT_ITEM(390, true),
    LEGACY_CARROT_ITEM(391, true),
    LEGACY_POTATO_ITEM(392, true),
    LEGACY_BAKED_POTATO(393, true),
    LEGACY_POISONOUS_POTATO(394, true),
    LEGACY_EMPTY_MAP(395, true),
    LEGACY_GOLDEN_CARROT(396, true),
    LEGACY_SKULL_ITEM(397, true),
    LEGACY_CARROT_STICK(398, true),
    LEGACY_NETHER_STAR(399, true),
    LEGACY_PUMPKIN_PIE(400, true),
    LEGACY_FIREWORK(401, true),
    LEGACY_FIREWORK_CHARGE(402, true),
    LEGACY_ENCHANTED_BOOK(403, true),
    LEGACY_REDSTONE_COMPARATOR(404, true),
    LEGACY_NETHER_BRICK_ITEM(405, true),
    LEGACY_QUARTZ(406, true),
    LEGACY_EXPLOSIVE_MINECART(407, true),
    LEGACY_HOPPER_MINECART(408, true),
    LEGACY_PRISMARINE_SHARD(409, true),
    LEGACY_PRISMARINE_CRYSTALS(410, true),
    LEGACY_RABBIT(411, true),
    LEGACY_COOKED_RABBIT(412, true),
    LEGACY_RABBIT_STEW(413, true),
    LEGACY_RABBIT_FOOT(414, true),
    LEGACY_RABBIT_HIDE(415, true),
    LEGACY_ARMOR_STAND(416, true),
    LEGACY_IRON_BARDING(417, true),
    LEGACY_GOLD_BARDING(418, true),
    LEGACY_DIAMOND_BARDING(419, true),
    LEGACY_LEASH(420, true),
    LEGACY_NAME_TAG(421, true),
    LEGACY_COMMAND_MINECART(422, true),
    LEGACY_MUTTON(423, true),
    LEGACY_COOKED_MUTTON(424, true),
    LEGACY_BANNER(425, true),
    LEGACY_END_CRYSTAL(426, true),
    LEGACY_SPRUCE_DOOR_ITEM(427, true),
    LEGACY_BIRCH_DOOR_ITEM(428, true),
    LEGACY_JUNGLE_DOOR_ITEM(429, true),
    LEGACY_ACACIA_DOOR_ITEM(430, true),
    LEGACY_DARK_OAK_DOOR_ITEM(431, true),
    LEGACY_CHORUS_FRUIT(432, true),
    LEGACY_CHORUS_FRUIT_POPPED(433, true),
    LEGACY_BEETROOT(434, true),
    LEGACY_BEETROOT_SEEDS(435, true),
    LEGACY_BEETROOT_SOUP(436, true),
    LEGACY_DRAGONS_BREATH(437, true),
    LEGACY_SPLASH_POTION(438, true),
    LEGACY_SPECTRAL_ARROW(439, true),
    LEGACY_TIPPED_ARROW(440, true),
    LEGACY_LINGERING_POTION(441, true),
    LEGACY_SHIELD(442, true),
    LEGACY_ELYTRA(443, true),
    LEGACY_BOAT_SPRUCE(444, true),
    LEGACY_BOAT_BIRCH(445, true),
    LEGACY_BOAT_JUNGLE(446, true),
    LEGACY_BOAT_ACACIA(447, true),
    LEGACY_BOAT_DARK_OAK(448, true),
    LEGACY_TOTEM(449, true),
    LEGACY_SHULKER_SHELL(450, true),
    LEGACY_IRON_NUGGET(452, true),
    LEGACY_KNOWLEDGE_BOOK(453, true),
    LEGACY_GOLD_RECORD(2256, true),
    LEGACY_GREEN_RECORD(2257, true),
    LEGACY_RECORD_3(2258, true),
    LEGACY_RECORD_4(2259, true),
    LEGACY_RECORD_5(2260, true),
    LEGACY_RECORD_6(2261, true),
    LEGACY_RECORD_7(2262, true),
    LEGACY_RECORD_8(2263, true),
    LEGACY_RECORD_9(2264, true),
    LEGACY_RECORD_10(2265, true),
    LEGACY_RECORD_11(2266, true),
    LEGACY_RECORD_12(2267, true);

    private final int id;
    private final boolean legacy;

    Material_1_13_2(int id) {
        this(id, false);
    }

    Material_1_13_2(int id, boolean legacy) {
        this.id = id;
        this.legacy = legacy;
    }

    public int getId() {
        return this.id;
    }

    public boolean isLegacy() {
        return this.legacy;
    }

    /**
     * Gets the Bukkit material version of this.
     *
     * @return Returns the Bukkit material.
     *
     * @apiNote MUST BE CALLING FROM A 1.13 SERVER VERSION OR THIS WILL NOT WORK AS INTENDED!
     */
    public Material getMaterial() {
        try {
            return Material.valueOf(name());
        }
        catch (Exception ignored) {
            return null;
        }
    }

    public static Material_1_13_2 getMaterial(String slug) {
        if (Strings.isNullOrEmpty(slug)) {
            return null;
        }
        return Arrays.stream(values()).
                filter((material) -> TextUtil.stringEqualsIgnoreCase(material.name(), slug)).
                findFirst().
                orElse(null);
    }

    /**
     * Migrates a 1.12 Material to 1.13
     *
     * @param legacy The 1.12 material to migrate.
     * @return Returns the migrated 1.13 material if the appropriate match exists.
     */
    public static Material_1_13_2 fromLegacy(Material_1_12_2 legacy) {
        return fromLegacy(legacy, (short) 0);
    }

    /**
     * Migrates a 1.12 Material to 1.13
     *
     * @param legacy The 1.12 material to migrate.
     * @param discriminator The material discriminator.
     * @return Returns the migrated 1.12 material if the appropriate match exists.
     *
     * @apiNote This migration is absolutely massive. In addition there are some quirks, for example, the head block in
     * 1.12 probably stores what kind of head it is within the block data, however this is changed in 1.13, so while
     * it's very much easy to map the head items to their new materials, it's impossible to map the block kind without
     * further investigation. For now skull blocks will be interpreted as skeleton skulls.
     *
     * TODO: Look into the block discriminators for skulls to see if there's something there.
     */
    @SuppressWarnings("Duplicates")
    public static Material_1_13_2 fromLegacy(Material_1_12_2 legacy, short discriminator) {
        if (legacy == null || (legacy.hasDiscriminator() && discriminator < 0)) {
            return null;
        }
        switch (legacy) {
            case AIR:
                return AIR;
            case STONE:
                switch(discriminator) {
                    case 0:
                        return STONE;
                    case 1:
                        return GRANITE;
                    case 2:
                        return POLISHED_GRANITE;
                    case 3:
                        return DIORITE;
                    case 4:
                        return POLISHED_DIORITE;
                    case 5:
                        return ANDESITE;
                    case 6:
                        return POLISHED_ANDESITE;
                    default:
                        return null;
                }
            case GRASS:
                return GRASS_BLOCK;
            case DIRT:
                switch(discriminator) {
                    case 0:
                        return DIRT;
                    case 1:
                        return COARSE_DIRT;
                    case 2:
                        return PODZOL;
                    default:
                        return null;
                }
            case COBBLESTONE:
                return COBBLESTONE;
            case WOOD:
                switch(discriminator) {
                    case 0:
                        return OAK_PLANKS;
                    case 1:
                        return SPRUCE_PLANKS;
                    case 2:
                        return BIRCH_PLANKS;
                    case 3:
                        return JUNGLE_PLANKS;
                    case 4:
                        return ACACIA_PLANKS;
                    case 5:
                        return DARK_OAK_PLANKS;
                    default:
                        return null;
                }
            case SAPLING:
                switch(discriminator) {
                    case 0:
                        return OAK_SAPLING;
                    case 1:
                        return SPRUCE_SAPLING;
                    case 2:
                        return BIRCH_SAPLING;
                    case 3:
                        return JUNGLE_SAPLING;
                    case 4:
                        return ACACIA_SAPLING;
                    case 5:
                        return DARK_OAK_SAPLING;
                    default:
                        return null;
                }
            case BEDROCK:
                return BEDROCK;
            case WATER:
            case STATIONARY_WATER:
                return WATER;
            case LAVA:
            case STATIONARY_LAVA:
                return LAVA;
            case SAND:
                switch(discriminator) {
                    case 0:
                        return SAND;
                    case 1:
                        return RED_SAND;
                    default:
                        return null;
                }
            case GRAVEL:
                return GRAVEL;
            case GOLD_ORE:
                return GOLD_ORE;
            case IRON_ORE:
                return IRON_ORE;
            case COAL_ORE:
                return COAL_ORE;
            case LOG:
                switch(discriminator) {
                    case 0:
                        return OAK_LOG;
                    case 1:
                        return SPRUCE_LOG;
                    case 2:
                        return BIRCH_LOG;
                    case 3:
                        return JUNGLE_LOG;
                    case 4:
                        return ACACIA_LOG;
                    case 5:
                        return DARK_OAK_LOG;
                    default:
                        return null;
                }
            case LEAVES:
                return OAK_LEAVES;
            case SPONGE:
                switch(discriminator) {
                    case 0:
                        return SPONGE;
                    case 1:
                        return WET_SPONGE;
                    default:
                        return null;
                }
            case GLASS:
                return GLASS;
            case LAPIS_ORE:
                return LAPIS_ORE;
            case LAPIS_BLOCK:
                return LAPIS_BLOCK;
            case DISPENSER:
                return DISPENSER;
            case SANDSTONE:
                switch(discriminator) {
                    case 0:
                        return SANDSTONE;
                    case 1:
                        return CHISELED_SANDSTONE;
                    case 2:
                        return SMOOTH_SANDSTONE;
                    default:
                        return null;
                }
            case NOTE_BLOCK:
                return NOTE_BLOCK;
            case BED_BLOCK:
            case BED:
                return RED_BED;
            case POWERED_RAIL:
                return POWERED_RAIL;
            case DETECTOR_RAIL:
                return DETECTOR_RAIL;
            case PISTON_STICKY_BASE:
                return STICKY_PISTON;
            case WEB:
                return COBWEB;
            case LONG_GRASS:
                switch(discriminator) {
                    case 0:
                        return DEAD_BUSH;
                    case 1:
                        return TALL_GRASS;
                    case 2:
                        return FERN;
                    default:
                        return null;
                }
            case DEAD_BUSH:
                return DEAD_BUSH;
            case PISTON_BASE:
                return PISTON;
            case PISTON_EXTENSION:
                return PISTON_HEAD;
            case WOOL:
                switch(discriminator) {
                    case 0:
                        return WHITE_WOOL;
                    case 1:
                        return ORANGE_WOOL;
                    case 2:
                        return MAGENTA_WOOL;
                    case 3:
                        return LIGHT_BLUE_WOOL;
                    case 4:
                        return YELLOW_WOOL;
                    case 5:
                        return LIME_WOOL;
                    case 6:
                        return PINK_WOOL;
                    case 7:
                        return GRAY_WOOL;
                    case 8:
                        return LIGHT_GRAY_WOOL;
                    case 9:
                        return CYAN_WOOL;
                    case 10:
                        return PURPLE_WOOL;
                    case 11:
                        return BLUE_WOOL;
                    case 12:
                        return BROWN_WOOL;
                    case 13:
                        return GREEN_WOOL;
                    case 14:
                        return RED_WOOL;
                    case 15:
                        return BLACK_WOOL;
                    default:
                        return null;
                }
            case PISTON_MOVING_PIECE:
                return MOVING_PISTON;
            case YELLOW_FLOWER:
                return DANDELION;
            case RED_ROSE:
                switch(discriminator) {
                    case 0:
                        return POPPY;
                    case 1:
                        return BLUE_ORCHID;
                    case 2:
                        return ALLIUM;
                    case 3:
                        return AZURE_BLUET;
                    case 4:
                        return RED_TULIP;
                    case 5:
                        return ORANGE_TULIP;
                    case 6:
                        return WHITE_TULIP;
                    case 7:
                        return PINK_TULIP;
                    case 8:
                        return OXEYE_DAISY;
                    default:
                        return null;
                }
            case BROWN_MUSHROOM:
                return BROWN_MUSHROOM;
            case RED_MUSHROOM:
                return RED_MUSHROOM;
            case GOLD_BLOCK:
                return GOLD_BLOCK;
            case IRON_BLOCK:
                return IRON_BLOCK;
            case DOUBLE_STEP:
            case STEP:
                switch(discriminator) {
                    case 0:
                        return STONE_SLAB;
                    case 1:
                        return SANDSTONE_SLAB;
                    case 2:
                        return OAK_SLAB;
                    case 3:
                        return COBBLESTONE_SLAB;
                    case 4:
                        return BRICK_SLAB;
                    case 5:
                        return STONE_BRICK_SLAB;
                    case 6:
                        return NETHER_BRICK_SLAB;
                    case 7:
                        return QUARTZ_SLAB;
                    default:
                        return null;
                }
            case BRICK:
                return BRICKS;
            case TNT:
                return TNT;
            case BOOKSHELF:
                return BOOKSHELF;
            case MOSSY_COBBLESTONE:
                return MOSSY_COBBLESTONE;
            case OBSIDIAN:
                return OBSIDIAN;
            case TORCH:
                return TORCH;
            case FIRE:
                return FIRE;
            case MOB_SPAWNER:
                return SPAWNER;
            case WOOD_STAIRS:
                return OAK_STAIRS;
            case CHEST:
                return CHEST;
            case REDSTONE_WIRE:
                return REDSTONE_WIRE;
            case DIAMOND_ORE:
                return DIAMOND_ORE;
            case DIAMOND_BLOCK:
                return DIAMOND_BLOCK;
            case WORKBENCH:
                return CRAFTING_TABLE;
            case CROPS:
            case WHEAT:
                return WHEAT;
            case SOIL:
                return FARMLAND;
            case FURNACE:
            case BURNING_FURNACE:
                return FURNACE;
            case SIGN_POST:
            case SIGN:
                return SIGN;
            case WOODEN_DOOR:
            case WOOD_DOOR:
                return OAK_DOOR;
            case LADDER:
                return LADDER;
            case RAILS:
                return RAIL;
            case COBBLESTONE_STAIRS:
                return COBBLESTONE_STAIRS;
            case WALL_SIGN:
                return WALL_SIGN;
            case LEVER:
                return LEVER;
            case STONE_PLATE:
                return STONE_PRESSURE_PLATE;
            case IRON_DOOR_BLOCK:
            case IRON_DOOR:
                return IRON_DOOR;
            case WOOD_PLATE:
                return OAK_PRESSURE_PLATE;
            case REDSTONE_ORE:
            case GLOWING_REDSTONE_ORE:
            case REDSTONE_TORCH_OFF:
                return REDSTONE_ORE;
            case REDSTONE_TORCH_ON:
                return REDSTONE_TORCH;
            case STONE_BUTTON:
                return STONE_BUTTON;
            case SNOW:
                return SNOW;
            case ICE:
                return ICE;
            case SNOW_BLOCK:
                return SNOW_BLOCK;
            case CACTUS:
                return CACTUS;
            case CLAY:
                return CLAY;
            case SUGAR_CANE_BLOCK:
            case SUGAR_CANE:
                return SUGAR_CANE;
            case JUKEBOX:
                return JUKEBOX;
            case FENCE:
                return OAK_FENCE;
            case PUMPKIN:
                return CARVED_PUMPKIN;
            case NETHERRACK:
                return NETHERRACK;
            case SOUL_SAND:
                return SOUL_SAND;
            case GLOWSTONE:
                return GLOWSTONE;
            case PORTAL:
                return NETHER_PORTAL;
            case JACK_O_LANTERN:
                return JACK_O_LANTERN;
            case CAKE_BLOCK:
            case CAKE:
                return CAKE;
            case DIODE_BLOCK_OFF:
            case DIODE_BLOCK_ON:
            case DIODE:
                return REPEATER;
            case STAINED_GLASS:
                switch(discriminator) {
                    case 0:
                        return WHITE_STAINED_GLASS;
                    case 1:
                        return ORANGE_STAINED_GLASS;
                    case 2:
                        return MAGENTA_STAINED_GLASS;
                    case 3:
                        return LIGHT_BLUE_STAINED_GLASS;
                    case 4:
                        return YELLOW_STAINED_GLASS;
                    case 5:
                        return LIME_STAINED_GLASS;
                    case 6:
                        return PINK_STAINED_GLASS;
                    case 7:
                        return GRAY_STAINED_GLASS;
                    case 8:
                        return LIGHT_GRAY_STAINED_GLASS;
                    case 9:
                        return CYAN_STAINED_GLASS;
                    case 10:
                        return PURPLE_STAINED_GLASS;
                    case 11:
                        return BLUE_STAINED_GLASS;
                    case 12:
                        return BROWN_STAINED_GLASS;
                    case 13:
                        return GREEN_STAINED_GLASS;
                    case 14:
                        return RED_STAINED_GLASS;
                    case 15:
                        return BLACK_STAINED_GLASS;
                    default:
                        return null;
                }
            case TRAP_DOOR:
                return OAK_TRAPDOOR;
            case MONSTER_EGGS:
                switch(discriminator) {
                    case 0:
                        return INFESTED_STONE;
                    case 1:
                        return INFESTED_COBBLESTONE;
                    case 2:
                        return INFESTED_STONE_BRICKS;
                    case 3:
                        return INFESTED_MOSSY_STONE_BRICKS;
                    case 4:
                        return INFESTED_CRACKED_STONE_BRICKS;
                    case 5:
                        return INFESTED_CHISELED_STONE_BRICKS;
                    default:
                        return null;
                }
            case SMOOTH_BRICK:
                switch(discriminator) {
                    case 0:
                        return STONE_BRICKS;
                    case 1:
                        return MOSSY_STONE_BRICKS;
                    case 2:
                        return CRACKED_STONE_BRICKS;
                    case 3:
                        return CHISELED_STONE_BRICKS;
                    default:
                        return null;
                }
            case HUGE_MUSHROOM_1:
                return BROWN_MUSHROOM_BLOCK;
            case HUGE_MUSHROOM_2:
                return RED_MUSHROOM_BLOCK;
            case IRON_FENCE:
                return IRON_BARS;
            case THIN_GLASS:
                return GLASS_PANE;
            case MELON_BLOCK:
                return MELON;
            case PUMPKIN_STEM:
                return PUMPKIN_STEM;
            case MELON_STEM:
                return MELON_STEM;
            case VINE:
                return VINE;
            case FENCE_GATE:
                return OAK_FENCE_GATE;
            case BRICK_STAIRS:
                return BRICK_STAIRS;
            case SMOOTH_STAIRS:
                return STONE_BRICK_STAIRS;
            case MYCEL:
                return MYCELIUM;
            case WATER_LILY:
                return LILY_PAD;
            case NETHER_BRICK:
                return NETHER_BRICKS;
            case NETHER_FENCE:
                return NETHER_BRICK_FENCE;
            case NETHER_BRICK_STAIRS:
                return NETHER_BRICK_STAIRS;
            case NETHER_WARTS:
            case NETHER_STALK:
                return NETHER_WART;
            case ENCHANTMENT_TABLE:
                return ENCHANTING_TABLE;
            case BREWING_STAND:
            case BREWING_STAND_ITEM:
                return BREWING_STAND;
            case CAULDRON:
            case CAULDRON_ITEM:
                return CAULDRON;
            case ENDER_PORTAL:
                return END_PORTAL;
            case ENDER_PORTAL_FRAME:
                return END_PORTAL_FRAME;
            case ENDER_STONE:
                return END_STONE;
            case DRAGON_EGG:
                return DRAGON_EGG;
            case REDSTONE_LAMP_OFF:
            case REDSTONE_LAMP_ON:
                return REDSTONE_LAMP;
            case WOOD_DOUBLE_STEP:
            case WOOD_STEP:
                switch(discriminator) {
                    case 0:
                        return OAK_SLAB;
                    case 1:
                        return SPRUCE_SLAB;
                    case 2:
                        return BIRCH_SLAB;
                    case 3:
                        return JUNGLE_SLAB;
                    case 4:
                        return ACACIA_SLAB;
                    case 5:
                        return DARK_OAK_SLAB;
                    default:
                        return null;
                }
            case COCOA:
                return COCOA;
            case SANDSTONE_STAIRS:
                return SANDSTONE_STAIRS;
            case EMERALD_ORE:
                return EMERALD_ORE;
            case ENDER_CHEST:
                return ENDER_CHEST;
            case TRIPWIRE_HOOK:
                return TRIPWIRE_HOOK;
            case TRIPWIRE:
                return TRIPWIRE;
            case EMERALD_BLOCK:
                return EMERALD_BLOCK;
            case SPRUCE_WOOD_STAIRS:
                return SPRUCE_STAIRS;
            case BIRCH_WOOD_STAIRS:
                return BIRCH_STAIRS;
            case JUNGLE_WOOD_STAIRS:
                return JUNGLE_STAIRS;
            case COMMAND:
                return COMMAND_BLOCK;
            case BEACON:
                return BEACON;
            case COBBLE_WALL:
                switch(discriminator) {
                    case 0:
                        return COBBLESTONE_WALL;
                    case 1:
                        return MOSSY_COBBLESTONE_WALL;
                    default:
                        return null;
                }
            case FLOWER_POT:
                return POTTED_CACTUS;
            case CARROT:
                return CARROTS;
            case POTATO:
                return POTATOES;
            case WOOD_BUTTON:
                return OAK_BUTTON;
            // TODO: Skull can be anything.
            case SKULL:
                return SKELETON_SKULL;
            case ANVIL:
                return ANVIL;
            case TRAPPED_CHEST:
                return TRAPPED_CHEST;
            case GOLD_PLATE:
                return LIGHT_WEIGHTED_PRESSURE_PLATE;
            case IRON_PLATE:
                return HEAVY_WEIGHTED_PRESSURE_PLATE;
            case REDSTONE_COMPARATOR_OFF:
            case REDSTONE_COMPARATOR_ON:
            case REDSTONE_COMPARATOR:
                return COMPARATOR;
            case DAYLIGHT_DETECTOR:
            case DAYLIGHT_DETECTOR_INVERTED:
                return DAYLIGHT_DETECTOR;
            case REDSTONE_BLOCK:
                return REDSTONE_BLOCK;
            case QUARTZ_ORE:
                return NETHER_QUARTZ_ORE;
            case HOPPER:
                return HOPPER;
            case QUARTZ_BLOCK:
                switch(discriminator) {
                    case 0:
                        return QUARTZ_BLOCK;
                    case 1:
                        return CHISELED_QUARTZ_BLOCK;
                    case 2:
                        return QUARTZ_PILLAR;
                    default:
                        return null;
                }
            case QUARTZ_STAIRS:
                return QUARTZ_STAIRS;
            case ACTIVATOR_RAIL:
                return ACTIVATOR_RAIL;
            case DROPPER:
                return DROPPER;
            case STAINED_CLAY:
                switch(discriminator) {
                    case 0:
                        return WHITE_TERRACOTTA;
                    case 1:
                        return ORANGE_TERRACOTTA;
                    case 2:
                        return MAGENTA_TERRACOTTA;
                    case 3:
                        return LIGHT_BLUE_TERRACOTTA;
                    case 4:
                        return YELLOW_TERRACOTTA;
                    case 5:
                        return LIME_TERRACOTTA;
                    case 6:
                        return PINK_TERRACOTTA;
                    case 7:
                        return GRAY_TERRACOTTA;
                    case 8:
                        return LIGHT_GRAY_TERRACOTTA;
                    case 9:
                        return CYAN_TERRACOTTA;
                    case 10:
                        return PURPLE_TERRACOTTA;
                    case 11:
                        return BLUE_TERRACOTTA;
                    case 12:
                        return BROWN_TERRACOTTA;
                    case 13:
                        return GREEN_TERRACOTTA;
                    case 14:
                        return RED_TERRACOTTA;
                    case 15:
                        return BLACK_TERRACOTTA;
                    default:
                        return null;
                }
            case STAINED_GLASS_PANE:
                switch(discriminator) {
                    case 0:
                        return WHITE_STAINED_GLASS_PANE;
                    case 1:
                        return ORANGE_STAINED_GLASS_PANE;
                    case 2:
                        return MAGENTA_STAINED_GLASS_PANE;
                    case 3:
                        return LIGHT_BLUE_STAINED_GLASS_PANE;
                    case 4:
                        return YELLOW_STAINED_GLASS_PANE;
                    case 5:
                        return LIME_STAINED_GLASS_PANE;
                    case 6:
                        return PINK_STAINED_GLASS_PANE;
                    case 7:
                        return GRAY_STAINED_GLASS_PANE;
                    case 8:
                        return LIGHT_GRAY_STAINED_GLASS_PANE;
                    case 9:
                        return CYAN_STAINED_GLASS_PANE;
                    case 10:
                        return PURPLE_STAINED_GLASS_PANE;
                    case 11:
                        return BLUE_STAINED_GLASS_PANE;
                    case 12:
                        return BROWN_STAINED_GLASS_PANE;
                    case 13:
                        return GREEN_STAINED_GLASS_PANE;
                    case 14:
                        return RED_STAINED_GLASS_PANE;
                    case 15:
                        return BLACK_STAINED_GLASS_PANE;
                    default:
                        return null;
                }
            case LEAVES_2:
                switch(discriminator) {
                    case 0:
                        return ACACIA_LEAVES;
                    case 1:
                        return DARK_OAK_LEAVES;
                    default:
                        return null;
                }
            case LOG_2:
                switch(discriminator) {
                    case 0:
                        return ACACIA_LOG;
                    case 1:
                        return DARK_OAK_LOG;
                    default:
                        return null;
                }
            case ACACIA_STAIRS:
                return ACACIA_STAIRS;
            case DARK_OAK_STAIRS:
                return DARK_OAK_STAIRS;
            case SLIME_BLOCK:
                return SLIME_BLOCK;
            case BARRIER:
                return BARRIER;
            case IRON_TRAPDOOR:
                return IRON_TRAPDOOR;
            case PRISMARINE:
                switch(discriminator) {
                    case 0:
                        return PRISMARINE;
                    case 1:
                        return PRISMARINE_BRICKS;
                    case 2:
                        return DARK_PRISMARINE;
                    default:
                        return null;
                }
            case SEA_LANTERN:
                return SEA_LANTERN;
            case HAY_BLOCK:
                return HAY_BLOCK;
            case CARPET:
                switch(discriminator) {
                    case 0:
                        return WHITE_CARPET;
                    case 1:
                        return ORANGE_CARPET;
                    case 2:
                        return MAGENTA_CARPET;
                    case 3:
                        return LIGHT_BLUE_CARPET;
                    case 4:
                        return YELLOW_CARPET;
                    case 5:
                        return LIME_CARPET;
                    case 6:
                        return PINK_CARPET;
                    case 7:
                        return GRAY_CARPET;
                    case 8:
                        return LIGHT_GRAY_CARPET;
                    case 9:
                        return CYAN_CARPET;
                    case 10:
                        return PURPLE_CARPET;
                    case 11:
                        return BLUE_CARPET;
                    case 12:
                        return BROWN_CARPET;
                    case 13:
                        return GREEN_CARPET;
                    case 14:
                        return RED_CARPET;
                    case 15:
                        return BLACK_CARPET;
                    default:
                        return null;
                }
            case HARD_CLAY:
                return TERRACOTTA;
            case COAL_BLOCK:
                return COAL_BLOCK;
            case PACKED_ICE:
                return PACKED_ICE;
            case DOUBLE_PLANT:
                switch(discriminator) {
                    case 0:
                        return SUNFLOWER;
                    case 1:
                        return LILAC;
                    case 2:
                        return TALL_GRASS;
                    case 3:
                        return LARGE_FERN;
                    case 4:
                        return ROSE_BUSH;
                    case 5:
                        return PEONY;
                    default:
                        return null;
                }
            case STANDING_BANNER:
                return WHITE_BANNER;
            case WALL_BANNER:
                return WHITE_WALL_BANNER;
            case RED_SANDSTONE:
                switch(discriminator) {
                    case 0:
                        return RED_SANDSTONE;
                    case 1:
                        return CHISELED_RED_SANDSTONE;
                    case 2:
                        return SMOOTH_RED_SANDSTONE;
                    default:
                        return null;
                }
            case RED_SANDSTONE_STAIRS:
                return RED_SANDSTONE_STAIRS;
            case DOUBLE_STONE_SLAB2:
            case STONE_SLAB2:
                return RED_SANDSTONE_SLAB;
            case SPRUCE_FENCE_GATE:
                return SPRUCE_FENCE_GATE;
            case BIRCH_FENCE_GATE:
                return BIRCH_FENCE_GATE;
            case JUNGLE_FENCE_GATE:
                return JUNGLE_FENCE_GATE;
            case DARK_OAK_FENCE_GATE:
                return DARK_OAK_FENCE_GATE;
            case ACACIA_FENCE_GATE:
                return ACACIA_FENCE_GATE;
            case SPRUCE_FENCE:
                return SPRUCE_FENCE;
            case BIRCH_FENCE:
                return BIRCH_FENCE;
            case JUNGLE_FENCE:
                return JUNGLE_FENCE;
            case DARK_OAK_FENCE:
                return DARK_OAK_FENCE;
            case ACACIA_FENCE:
                return ACACIA_FENCE;
            case SPRUCE_DOOR:
            case SPRUCE_DOOR_ITEM:
                return SPRUCE_DOOR;
            case BIRCH_DOOR:
            case BIRCH_DOOR_ITEM:
                return BIRCH_DOOR;
            case JUNGLE_DOOR:
            case JUNGLE_DOOR_ITEM:
                return JUNGLE_DOOR;
            case ACACIA_DOOR:
            case ACACIA_DOOR_ITEM:
                return ACACIA_DOOR;
            case DARK_OAK_DOOR:
            case DARK_OAK_DOOR_ITEM:
                return DARK_OAK_DOOR;
            case END_ROD:
                return END_ROD;
            case CHORUS_PLANT:
                return CHORUS_PLANT;
            case CHORUS_FLOWER:
                return CHORUS_FLOWER;
            case PURPUR_BLOCK:
                return PURPUR_BLOCK;
            case PURPUR_PILLAR:
                return PURPUR_PILLAR;
            case PURPUR_STAIRS:
                return PURPUR_STAIRS;
            case PURPUR_DOUBLE_SLAB:
            case PURPUR_SLAB:
                return PURPUR_SLAB;
            case END_BRICKS:
                return END_STONE_BRICKS;
            case BEETROOT_BLOCK:
                return BEETROOTS;
            case GRASS_PATH:
                return GRASS_PATH;
            case END_GATEWAY:
                return END_GATEWAY;
            case COMMAND_REPEATING:
                return REPEATING_COMMAND_BLOCK;
            case COMMAND_CHAIN:
                return CHAIN_COMMAND_BLOCK;
            case FROSTED_ICE:
                return FROSTED_ICE;
            case MAGMA:
                return MAGMA_BLOCK;
            case NETHER_WART_BLOCK:
                return NETHER_WART_BLOCK;
            case RED_NETHER_BRICK:
                return RED_NETHER_BRICKS;
            case BONE_BLOCK:
                return BONE_BLOCK;
            case STRUCTURE_VOID:
                return STRUCTURE_VOID;
            case OBSERVER:
                return OBSERVER;
            case WHITE_SHULKER_BOX:
                return WHITE_SHULKER_BOX;
            case ORANGE_SHULKER_BOX:
                return ORANGE_SHULKER_BOX;
            case MAGENTA_SHULKER_BOX:
                return MAGENTA_SHULKER_BOX;
            case LIGHT_BLUE_SHULKER_BOX:
                return LIGHT_BLUE_SHULKER_BOX;
            case YELLOW_SHULKER_BOX:
                return YELLOW_SHULKER_BOX;
            case LIME_SHULKER_BOX:
                return LIME_SHULKER_BOX;
            case PINK_SHULKER_BOX:
                return PINK_SHULKER_BOX;
            case GRAY_SHULKER_BOX:
                return GRAY_SHULKER_BOX;
            case SILVER_SHULKER_BOX:
                return LIGHT_GRAY_SHULKER_BOX;
            case CYAN_SHULKER_BOX:
                return CYAN_SHULKER_BOX;
            case PURPLE_SHULKER_BOX:
                return PURPLE_SHULKER_BOX;
            case BLUE_SHULKER_BOX:
                return BLUE_SHULKER_BOX;
            case BROWN_SHULKER_BOX:
                return BROWN_SHULKER_BOX;
            case GREEN_SHULKER_BOX:
                return GREEN_SHULKER_BOX;
            case RED_SHULKER_BOX:
                return RED_SHULKER_BOX;
            case BLACK_SHULKER_BOX:
                return BLACK_SHULKER_BOX;
            case WHITE_GLAZED_TERRACOTTA:
                return WHITE_GLAZED_TERRACOTTA;
            case ORANGE_GLAZED_TERRACOTTA:
                return ORANGE_GLAZED_TERRACOTTA;
            case MAGENTA_GLAZED_TERRACOTTA:
                return MAGENTA_GLAZED_TERRACOTTA;
            case LIGHT_BLUE_GLAZED_TERRACOTTA:
                return LIGHT_BLUE_GLAZED_TERRACOTTA;
            case YELLOW_GLAZED_TERRACOTTA:
                return YELLOW_GLAZED_TERRACOTTA;
            case LIME_GLAZED_TERRACOTTA:
                return LIME_GLAZED_TERRACOTTA;
            case PINK_GLAZED_TERRACOTTA:
                return PINK_GLAZED_TERRACOTTA;
            case GRAY_GLAZED_TERRACOTTA:
                return GRAY_GLAZED_TERRACOTTA;
            case SILVER_GLAZED_TERRACOTTA:
                return LIGHT_GRAY_GLAZED_TERRACOTTA;
            case CYAN_GLAZED_TERRACOTTA:
                return CYAN_GLAZED_TERRACOTTA;
            case PURPLE_GLAZED_TERRACOTTA:
                return PURPLE_GLAZED_TERRACOTTA;
            case BLUE_GLAZED_TERRACOTTA:
                return BLUE_GLAZED_TERRACOTTA;
            case BROWN_GLAZED_TERRACOTTA:
                return BROWN_GLAZED_TERRACOTTA;
            case GREEN_GLAZED_TERRACOTTA:
                return GREEN_GLAZED_TERRACOTTA;
            case RED_GLAZED_TERRACOTTA:
                return RED_GLAZED_TERRACOTTA;
            case BLACK_GLAZED_TERRACOTTA:
                return BLACK_GLAZED_TERRACOTTA;
            case CONCRETE:
                switch(discriminator) {
                    case 0:
                        return WHITE_CONCRETE;
                    case 1:
                        return ORANGE_CONCRETE;
                    case 2:
                        return MAGENTA_CONCRETE;
                    case 3:
                        return LIGHT_BLUE_CONCRETE;
                    case 4:
                        return YELLOW_CONCRETE;
                    case 5:
                        return LIME_CONCRETE;
                    case 6:
                        return PINK_CONCRETE;
                    case 7:
                        return GRAY_CONCRETE;
                    case 8:
                        return LIGHT_GRAY_CONCRETE;
                    case 9:
                        return CYAN_CONCRETE;
                    case 10:
                        return PURPLE_CONCRETE;
                    case 11:
                        return BLUE_CONCRETE;
                    case 12:
                        return BROWN_CONCRETE;
                    case 13:
                        return GREEN_CONCRETE;
                    case 14:
                        return RED_CONCRETE;
                    case 15:
                        return BLACK_CONCRETE;
                    default:
                        return null;
                }
            case CONCRETE_POWDER:
                switch(discriminator) {
                    case 0:
                        return WHITE_CONCRETE_POWDER;
                    case 1:
                        return ORANGE_CONCRETE_POWDER;
                    case 2:
                        return MAGENTA_CONCRETE_POWDER;
                    case 3:
                        return LIGHT_BLUE_CONCRETE_POWDER;
                    case 4:
                        return YELLOW_CONCRETE_POWDER;
                    case 5:
                        return LIME_CONCRETE_POWDER;
                    case 6:
                        return PINK_CONCRETE_POWDER;
                    case 7:
                        return GRAY_CONCRETE_POWDER;
                    case 8:
                        return LIGHT_GRAY_CONCRETE_POWDER;
                    case 9:
                        return CYAN_CONCRETE_POWDER;
                    case 10:
                        return PURPLE_CONCRETE_POWDER;
                    case 11:
                        return BLUE_CONCRETE_POWDER;
                    case 12:
                        return BROWN_CONCRETE_POWDER;
                    case 13:
                        return GREEN_CONCRETE_POWDER;
                    case 14:
                        return RED_CONCRETE_POWDER;
                    case 15:
                        return BLACK_CONCRETE_POWDER;
                    default:
                        return null;
                }
            case STRUCTURE_BLOCK:
                return STRUCTURE_BLOCK;
            case IRON_SPADE:
                return IRON_SHOVEL;
            case IRON_PICKAXE:
                return IRON_PICKAXE;
            case IRON_AXE:
                return IRON_AXE;
            case FLINT_AND_STEEL:
                return FLINT_AND_STEEL;
            case APPLE:
                return APPLE;
            case BOW:
                return BOW;
            case ARROW:
                return ARROW;
            case COAL:
                switch(discriminator) {
                    case 0:
                        return COAL;
                    case 1:
                        return CHARCOAL;
                    default:
                        return null;
                }
            case DIAMOND:
                return DIAMOND;
            case IRON_INGOT:
                return IRON_INGOT;
            case GOLD_INGOT:
                return GOLD_INGOT;
            case IRON_SWORD:
                return IRON_SWORD;
            case WOOD_SWORD:
                return WOODEN_SWORD;
            case WOOD_SPADE:
                return WOODEN_SHOVEL;
            case WOOD_PICKAXE:
                return WOODEN_PICKAXE;
            case WOOD_AXE:
                return WOODEN_AXE;
            case STONE_SWORD:
                return STONE_SWORD;
            case STONE_SPADE:
                return STONE_SHOVEL;
            case STONE_PICKAXE:
                return STONE_PICKAXE;
            case STONE_AXE:
                return STONE_AXE;
            case DIAMOND_SWORD:
                return DIAMOND_SWORD;
            case DIAMOND_SPADE:
                return DIAMOND_SHOVEL;
            case DIAMOND_PICKAXE:
                return DIAMOND_PICKAXE;
            case DIAMOND_AXE:
                return DIAMOND_AXE;
            case STICK:
                return STICK;
            case BOWL:
                return BOWL;
            case MUSHROOM_SOUP:
                return MUSHROOM_STEW;
            case GOLD_SWORD:
                return GOLDEN_SWORD;
            case GOLD_SPADE:
                return GOLDEN_SHOVEL;
            case GOLD_PICKAXE:
                return GOLDEN_PICKAXE;
            case GOLD_AXE:
                return GOLDEN_AXE;
            case STRING:
                return STRING;
            case FEATHER:
                return FEATHER;
            case SULPHUR:
                return GUNPOWDER;
            case WOOD_HOE:
                return WOODEN_HOE;
            case STONE_HOE:
                return STONE_HOE;
            case IRON_HOE:
                return IRON_HOE;
            case DIAMOND_HOE:
                return DIAMOND_HOE;
            case GOLD_HOE:
                return GOLDEN_HOE;
            case SEEDS:
                return WHEAT_SEEDS;
            case BREAD:
                return BREAD;
            case LEATHER_HELMET:
                return LEATHER_HELMET;
            case LEATHER_CHESTPLATE:
                return LEATHER_CHESTPLATE;
            case LEATHER_LEGGINGS:
                return LEATHER_LEGGINGS;
            case LEATHER_BOOTS:
                return LEATHER_BOOTS;
            case CHAINMAIL_HELMET:
                return CHAINMAIL_HELMET;
            case CHAINMAIL_CHESTPLATE:
                return CHAINMAIL_CHESTPLATE;
            case CHAINMAIL_LEGGINGS:
                return CHAINMAIL_LEGGINGS;
            case CHAINMAIL_BOOTS:
                return CHAINMAIL_BOOTS;
            case IRON_HELMET:
                return IRON_HELMET;
            case IRON_CHESTPLATE:
                return IRON_CHESTPLATE;
            case IRON_LEGGINGS:
                return IRON_LEGGINGS;
            case IRON_BOOTS:
                return IRON_BOOTS;
            case DIAMOND_HELMET:
                return DIAMOND_HELMET;
            case DIAMOND_CHESTPLATE:
                return DIAMOND_CHESTPLATE;
            case DIAMOND_LEGGINGS:
                return DIAMOND_LEGGINGS;
            case DIAMOND_BOOTS:
                return DIAMOND_BOOTS;
            case GOLD_HELMET:
                return GOLDEN_HELMET;
            case GOLD_CHESTPLATE:
                return GOLDEN_CHESTPLATE;
            case GOLD_LEGGINGS:
                return GOLDEN_LEGGINGS;
            case GOLD_BOOTS:
                return GOLDEN_BOOTS;
            case FLINT:
                return FLINT;
            case PORK:
                return PORKCHOP;
            case GRILLED_PORK:
                return COOKED_PORKCHOP;
            case PAINTING:
                return PAINTING;
            case GOLDEN_APPLE:
                switch(discriminator) {
                    case 0:
                        return GOLDEN_APPLE;
                    case 1:
                        return ENCHANTED_GOLDEN_APPLE;
                    default:
                        return null;
                }
            case BUCKET:
                return BUCKET;
            case WATER_BUCKET:
                return WATER_BUCKET;
            case LAVA_BUCKET:
                return LAVA_BUCKET;
            case MINECART:
                return MINECART;
            case SADDLE:
                return SADDLE;
            case REDSTONE:
                return REDSTONE;
            case SNOW_BALL:
                return SNOWBALL;
            case BOAT:
                return OAK_BOAT;
            case LEATHER:
                return LEATHER;
            case MILK_BUCKET:
                return MILK_BUCKET;
            case CLAY_BRICK:
                return BRICK;
            case CLAY_BALL:
                return CLAY_BALL;
            case PAPER:
                return PAPER;
            case BOOK:
                return BOOK;
            case SLIME_BALL:
                return SLIME_BALL;
            case STORAGE_MINECART:
                return CHEST_MINECART;
            case POWERED_MINECART:
                return FURNACE_MINECART;
            case EGG:
                return EGG;
            case COMPASS:
                return COMPASS;
            case FISHING_ROD:
                return FISHING_ROD;
            case WATCH:
                return CLOCK;
            case GLOWSTONE_DUST:
                return GLOWSTONE_DUST;
            case RAW_FISH:
                switch(discriminator) {
                    case 0:
                        return COD;
                    case 1:
                        return SALMON;
                    case 2:
                        return TROPICAL_FISH;
                    case 3:
                        return PUFFERFISH;
                    default:
                        return null;
                }
            case COOKED_FISH:
                switch(discriminator) {
                    case 0:
                        return COOKED_COD;
                    case 1:
                        return COOKED_SALMON;
                    default:
                        return null;
                }
            case INK_SACK:
                switch(discriminator) {
                    case 0:
                        return INK_SAC;
                    case 1:
                        return ROSE_RED;
                    case 2:
                        return CACTUS_GREEN;
                    case 3:
                        return COCOA_BEANS;
                    case 4:
                        return LAPIS_LAZULI;
                    case 5:
                        return PURPLE_DYE;
                    case 6:
                        return CYAN_DYE;
                    case 7:
                        return LIGHT_GRAY_DYE;
                    case 8:
                        return GRAY_DYE;
                    case 9:
                        return PINK_DYE;
                    case 10:
                        return LIME_DYE;
                    case 11:
                        return DANDELION_YELLOW;
                    case 12:
                        return LIGHT_BLUE_DYE;
                    case 13:
                        return MAGENTA_DYE;
                    case 14:
                        return ORANGE_DYE;
                    case 15:
                        return BONE_MEAL;
                    default:
                        return null;
                }
            case BONE:
                return BONE;
            case SUGAR:
                return SUGAR;
            case COOKIE:
                return COOKIE;
            case MAP:
                return FILLED_MAP;
            case SHEARS:
                return SHEARS;
            case MELON:
                return MELON_SLICE;
            case PUMPKIN_SEEDS:
                return PUMPKIN_SEEDS;
            case MELON_SEEDS:
                return MELON_SEEDS;
            case RAW_BEEF:
                return BEEF;
            case COOKED_BEEF:
                return COOKED_BEEF;
            case RAW_CHICKEN:
                return CHICKEN;
            case COOKED_CHICKEN:
                return COOKED_CHICKEN;
            case ROTTEN_FLESH:
                return ROTTEN_FLESH;
            case ENDER_PEARL:
                return ENDER_PEARL;
            case BLAZE_ROD:
                return BLAZE_ROD;
            case GHAST_TEAR:
                return GHAST_TEAR;
            case GOLD_NUGGET:
                return GOLD_NUGGET;
            case POTION:
                return POTION;
            case GLASS_BOTTLE:
                return GLASS_BOTTLE;
            case SPIDER_EYE:
                return SPIDER_EYE;
            case FERMENTED_SPIDER_EYE:
                return FERMENTED_SPIDER_EYE;
            case BLAZE_POWDER:
                return BLAZE_POWDER;
            case MAGMA_CREAM:
                return MAGMA_CREAM;
            case EYE_OF_ENDER:
                return ENDER_EYE;
            case SPECKLED_MELON:
                return GLISTERING_MELON_SLICE;
            case MONSTER_EGG:
                switch(discriminator) {
                    case 4:
                        return ELDER_GUARDIAN_SPAWN_EGG;
                    case 5:
                        return WITHER_SKELETON_SPAWN_EGG;
                    case 6:
                        return STRAY_SPAWN_EGG;
                    case 23:
                        return HUSK_SPAWN_EGG;
                    case 27:
                        return ZOMBIE_VILLAGER_SPAWN_EGG;
                    case 28:
                        return SKELETON_HORSE_SPAWN_EGG;
                    case 29:
                        return ZOMBIE_HORSE_SPAWN_EGG;
                    case 31:
                        return DONKEY_SPAWN_EGG;
                    case 32:
                        return MULE_SPAWN_EGG;
                    case 34:
                        return EVOKER_SPAWN_EGG;
                    case 35:
                        return VEX_SPAWN_EGG;
                    case 36:
                        return VINDICATOR_SPAWN_EGG;
                    case 50:
                        return CREEPER_SPAWN_EGG;
                    case 51:
                        return SKELETON_SPAWN_EGG;
                    case 52:
                        return SPIDER_SPAWN_EGG;
                    case 54:
                        return ZOMBIE_SPAWN_EGG;
                    case 55:
                        return SLIME_SPAWN_EGG;
                    case 56:
                        return GHAST_SPAWN_EGG;
                    case 57:
                        return ZOMBIE_PIGMAN_SPAWN_EGG;
                    case 58:
                        return ENDERMAN_SPAWN_EGG;
                    case 59:
                        return CAVE_SPIDER_SPAWN_EGG;
                    case 60:
                        return SILVERFISH_SPAWN_EGG;
                    case 61:
                        return BLAZE_SPAWN_EGG;
                    case 62:
                        return MAGMA_CUBE_SPAWN_EGG;
                    case 65:
                        return BAT_SPAWN_EGG;
                    case 66:
                        return WITCH_SPAWN_EGG;
                    case 67:
                        return ENDERMITE_SPAWN_EGG;
                    case 68:
                        return GUARDIAN_SPAWN_EGG;
                    case 69:
                        return SHULKER_SPAWN_EGG;
                    case 90:
                        return PIG_SPAWN_EGG;
                    case 91:
                        return SHEEP_SPAWN_EGG;
                    case 92:
                        return COW_SPAWN_EGG;
                    case 93:
                        return CHICKEN_SPAWN_EGG;
                    case 94:
                        return SQUID_SPAWN_EGG;
                    case 95:
                        return WOLF_SPAWN_EGG;
                    case 96:
                        return MOOSHROOM_SPAWN_EGG;
                    case 98:
                        return OCELOT_SPAWN_EGG;
                    case 100:
                        return HORSE_SPAWN_EGG;
                    case 101:
                        return RABBIT_SPAWN_EGG;
                    case 102:
                        return POLAR_BEAR_SPAWN_EGG;
                    case 103:
                        return LLAMA_SPAWN_EGG;
                    case 105:
                        return PARROT_SPAWN_EGG;
                    case 120:
                        return VILLAGER_SPAWN_EGG;
                    default:
                        return null;
                }
            case EXP_BOTTLE:
                return EXPERIENCE_BOTTLE;
            case FIREBALL:
                return FIRE_CHARGE;
            case BOOK_AND_QUILL:
                return WRITABLE_BOOK;
            case WRITTEN_BOOK:
                return WRITTEN_BOOK;
            case EMERALD:
                return EMERALD;
            case ITEM_FRAME:
                return ITEM_FRAME;
            case FLOWER_POT_ITEM:
                return FLOWER_POT;
            case CARROT_ITEM:
                return CARROT;
            case POTATO_ITEM:
                return POTATO;
            case BAKED_POTATO:
                return BAKED_POTATO;
            case POISONOUS_POTATO:
                return POISONOUS_POTATO;
            case EMPTY_MAP:
                return MAP;
            case GOLDEN_CARROT:
                return GOLDEN_CARROT;
            case SKULL_ITEM:
                switch(discriminator) {
                    case 0:
                        return SKELETON_SKULL;
                    case 1:
                        return WITHER_SKELETON_SKULL;
                    case 2:
                        return ZOMBIE_HEAD;
                    case 3:
                        return PLAYER_HEAD;
                    case 4:
                        return CREEPER_HEAD;
                    case 5:
                        return DRAGON_HEAD;
                    default:
                        return null;
                }
            case CARROT_STICK:
                return CARROT_ON_A_STICK;
            case NETHER_STAR:
                return NETHER_STAR;
            case PUMPKIN_PIE:
                return PUMPKIN_PIE;
            case FIREWORK:
                return FIREWORK_ROCKET;
            case FIREWORK_CHARGE:
                return FIREWORK_STAR;
            case ENCHANTED_BOOK:
                return ENCHANTED_BOOK;
            case NETHER_BRICK_ITEM:
                return NETHER_BRICK;
            case QUARTZ:
                return QUARTZ;
            case EXPLOSIVE_MINECART:
                return TNT_MINECART;
            case HOPPER_MINECART:
                return HOPPER_MINECART;
            case PRISMARINE_SHARD:
                return PRISMARINE_SHARD;
            case PRISMARINE_CRYSTALS:
                return PRISMARINE_CRYSTALS;
            case RABBIT:
                return RABBIT;
            case COOKED_RABBIT:
                return COOKED_RABBIT;
            case RABBIT_STEW:
                return RABBIT_STEW;
            case RABBIT_FOOT:
                return RABBIT_FOOT;
            case RABBIT_HIDE:
                return RABBIT_HIDE;
            case ARMOR_STAND:
                return ARMOR_STAND;
            case IRON_BARDING:
                return IRON_HORSE_ARMOR;
            case GOLD_BARDING:
                return GOLDEN_HORSE_ARMOR;
            case DIAMOND_BARDING:
                return DIAMOND_HORSE_ARMOR;
            case LEASH:
                return LEAD;
            case NAME_TAG:
                return NAME_TAG;
            case COMMAND_MINECART:
                return COMMAND_BLOCK_MINECART;
            case MUTTON:
                return MUTTON;
            case COOKED_MUTTON:
                return COOKED_MUTTON;
            case BANNER:
                return BLACK_BANNER;
            case END_CRYSTAL:
                return END_CRYSTAL;
            case CHORUS_FRUIT:
                return CHORUS_FRUIT;
            case CHORUS_FRUIT_POPPED:
                return POPPED_CHORUS_FRUIT;
            case BEETROOT:
                return BEETROOT;
            case BEETROOT_SEEDS:
                return BEETROOT_SEEDS;
            case BEETROOT_SOUP:
                return BEETROOT_SOUP;
            case DRAGONS_BREATH:
                return DRAGON_BREATH;
            case SPLASH_POTION:
                return SPLASH_POTION;
            case SPECTRAL_ARROW:
                return SPECTRAL_ARROW;
            case TIPPED_ARROW:
                return TIPPED_ARROW;
            case LINGERING_POTION:
                return LINGERING_POTION;
            case SHIELD:
                return SHIELD;
            case ELYTRA:
                return ELYTRA;
            case BOAT_SPRUCE:
                return SPRUCE_BOAT;
            case BOAT_BIRCH:
                return BIRCH_BOAT;
            case BOAT_JUNGLE:
                return JUNGLE_BOAT;
            case BOAT_ACACIA:
                return ACACIA_BOAT;
            case BOAT_DARK_OAK:
                return DARK_OAK_BOAT;
            case TOTEM:
                return TOTEM_OF_UNDYING;
            case SHULKER_SHELL:
                return SHULKER_SHELL;
            case IRON_NUGGET:
                return IRON_NUGGET;
            case KNOWLEDGE_BOOK:
                return KNOWLEDGE_BOOK;
            case GOLD_RECORD:
                return MUSIC_DISC_13;
            case GREEN_RECORD:
                return MUSIC_DISC_CAT;
            case RECORD_3:
                return MUSIC_DISC_BLOCKS;
            case RECORD_4:
                return MUSIC_DISC_CHIRP;
            case RECORD_5:
                return MUSIC_DISC_FAR;
            case RECORD_6:
                return MUSIC_DISC_MALL;
            case RECORD_7:
                return MUSIC_DISC_MELLOHI;
            case RECORD_8:
                return MUSIC_DISC_STAL;
            case RECORD_9:
                return MUSIC_DISC_STRAD;
            case RECORD_10:
                return MUSIC_DISC_WARD;
            case RECORD_11:
                return MUSIC_DISC_11;
            case RECORD_12:
                return MUSIC_DISC_WAIT;
            default:
                return null;
        }
    }

}
